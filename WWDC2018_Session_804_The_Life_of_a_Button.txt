안녕하세요 여러분, 저는 Julian입니다. 나중에 우리 제품에 걸쳐 소리를 디자인하는 Hugo와 합류하게 될 것입니다.
 시작하기 전에 여기 왜 잠시 동안 버튼에 대해 이야기 할 것인지에 대해 설명하기를 원했습니다.
 나는 미래의 하드웨어를위한 사용자 인터페이스를 설계하고 프로토 타입을 작성한다.
 내 작업의 특성상 표준 UIKit을 항상 사용할 수있는 것은 아닙니다.
 스크롤, 확대 / 축소, 페이징 및 물론 버튼과 같은 많은 기본 사용자 인터페이스 요소를 빌드하고 다시 작성했으며 이러한 컨트롤을 디자인하고 작성하는 데 관련된 세부 사항을 많이 배웠습니다.
 그래서 나는 당신과 함께 배운 것에 관해 조금이라도 나누기 위해 왔습니다.
 나는 아주 간단한 무언가, 단추, 그것의 뒤에 많은 고려 사항 및 복합성이 어떻게 있는지 당신에게 보여주고 싶다.
 그리고이 버튼을보고 몇 가지를 배울 수 있기를 바랍니다.
 좀 더 신중하게 표준 컨트롤을 사용하길 바랍니다.
 사용자 지정 컨트롤을 빌드 할시기를 고려하십시오.
 그리고 커스텀 컨트롤을 만들 때, 당신은 당신의 상호 작용을 완전히 고려해보기를 원합니다.
 시작하겠습니다.
 휴고와 저는 장인 어플리 apppire를 확장하고 있습니다.
 우리는 토스터에 연결된 새로운 간단한 앱을 개발 중입니다.
 아침에 준비하는 순간을 상상한다면, 문을 나서기 전까지 아침 식사 준비를하고 싶을 것입니다.
 앱을 실행하고 버튼을 누르고 주방에서 기다리고있는 신선한 토스트 조각을 기대하기 만하면됩니다.
 이제 우리의 연결된 토스터에서 작동합니다.
 우리의 연결된 토스터기는 몇 개의 다른 주를 통과합니다. 새로운 토스트 조각을 준비하고 기다리는 중입니다. 토스트를 만들고, 마지막으로 축배를 수행합니다. 중요한 부분입니다.
 하지만 연결된 토스터가이 주들 사이를 전환하는 방식은 우리 앱을 사용하는 사람들입니다.
 그들이 우리의 응용 프로그램을 사용하면 토스터 조각을 요청하여 토스터기를 시작할 수 있습니다.
 건배가 끝나면 그들은 물론 그것을 먹을 것입니다.
 어쩌면 어떤 이유로 그들은 그것을 취소하고 싶을 것입니다, 나는이 것에 대해 정말로 확신하지 못합니다.
 그리고 물론 우리는 토스터기가 언제나 봉사 할 준비가되어 있는지 확인하기를 원합니다.
 나는 이것이 어떻게 작동하는지 정확하게 밝히지는 않겠지 만 그것이 나를 믿는다는 것은 훌륭합니다.
 우리는 또한 미래에 대한 큰 계획을 가지고 있습니다. 우리는 토스트 (AR 토스트), 토스트 대기열, 가정 당 여러 토스터를 가질 수 있습니다. 결국 토스트 소셜 네트워크에 연결합니다.
 저의 요점은 여기에 많은 내용이 있습니다. 오늘 세션에서 우리는 한 화면의 세부 사항, 사실 우리 앱의 단일 화면에있는 단일 버튼에 대해 자세히 살펴볼 것입니다.
 우리가 가장 중요한 상호 작용의 세부 사항에 이르면 나머지는 그것으로부터 흘러 나올 것입니다.
 따라서 우리 시스템을 다시 보면, 여기서 가장 중요한 상호 작용이 실제로 토스트를 요청할 때라고 생각합니다.
 분명히 나머지 모든 작업이 필요하지만 토스트 요청은 첫인상이며 사람들이 토스터를 시작할 수 없다면 나머지는 별 문제가되지 않습니다.
 오늘이 작업을 수행하기 위해 버튼이 무엇인지에 대해 조금 이야기 한 다음 대화 형 컨트롤에 대해 생각하는 방법을 함께 나누겠습니다.
 마지막으로 Hugo는 우리 버튼에 소리를 추가합니다.
 어쨌든 버튼이란 무엇입니까? 현재 사용하고있는 버튼이나 화면상의 사용자 인터페이스 컨트롤.
 버튼은 액션의 간접 컨트롤러입니다.
 내가 말하고자하는 것은 버튼을 탭할 때 액션이 다른 곳에서 발생한다는 것입니다.
 이것은 내가 직접 레버를 잡고 레버를 직접 제어하는 ​​직접적인 상호 작용과는 대조적입니다.
 직접적인 상호 작용은 실제 경험을 참조하고 더 재미있게 느낄 수 있습니다.
 그러나 버튼과 같은 간접적 인 상호 작용의 진정한 힘은 분리로 인해 더 명확하고 강력해질 수 있다는 것입니다.
 여기서 흥미로운 점은 이러한 화면 버튼이 모방하는 물리적 인 버튼조차도 간접적이라는 것입니다.
 액션이 발생하더라도 버튼이 액션을 제어하는 ​​다른 곳에서 결과가 발생합니다.
 그리고 결과를 디자인 할 수있는 동작과 마찬가지로 버튼을 디자인 할 수 있으므로이 두 가지 사항을 별도로 고려하고 연결할 수 있습니다.
 이를 위해 우리는 설계 피드백의 단일 렌즈에 크게 의존해야합니다.
 의견은 사람들에게 앱의 기능을 알리는 방법입니다.
 많은 사람들이 앱 내에서 피드백을 제공 할 수 있고 이미 그렇게하고있는 다양한 방법을 생각해 왔을 것입니다.
 그러나 두 가지 주요 범주의 의견이 있다고 생각합니다.
 첫 번째는 사람들에게 말할 수 있다는 것입니다. 문자 그대로 화면에 무엇이 진행되고 있는지 설명하거나, 물건을 설명하는 아이콘을 디자인 할 수 있습니다.
 두 번째는 사람들을 보여줄 수 있다는 것입니다. 시각적, 오디오 적 또는 햅틱적인 변화를 통해 사람들이 실제 세계와 더 비슷한 행동 결과를 경험하도록 허용 할 수 있습니다.
 이제 상호 작용의 완성 단계가 아닌 3 단계의 상호 작용에 대해 피드백을 적용 할 것입니다.
 우리는 이러한 단계를 물리적 단추로 생각할 수 있습니다.

버튼을 누르기 전에 그냥 서성 거리고 있습니다.
 그 버튼과의 상호 작용 동안 그것은 눌려지고 있습니다.
 그리고 마침내 버튼을 누르면 손가락이 들어 올려지고 원래 상태로 돌아갑니다.
 그렇다면 버튼과 상호 작용하기 전에 피드백을 제공한다는 것은 무엇을 의미합니까? 왜 이것이 중요한지, 버튼은 바로 거기에 있습니다.
 우리 아이폰에 대해 잠시 생각해 보면, 아이폰 화면은 단지 유리 조각 일뿐입니다.
 이 유리 조각은 그 아래에 빛나는 픽셀을 가지고 있으며 중요한 것은 사람들이 그 픽셀이 의미한다고 생각하는 것입니다.
 Glass는 태핑 가능하다고 말하지 않지만 화면상의 어떤 것이 표시 될 수 있습니다.
 이 프레젠테이션의 목적을 위해 무언가를 통해 페이지를 넘기거나 무언가를 드래그 할 수 있다는 것을 알 수 있습니다.
 제가 말하는 것에 대한 학문적 용어는 인식 된 자산입니다.
 Affordance는 객체와 객체와의 상호 작용을 말합니다.
 사람이 손잡이를 잡거나 물리적 단추를 눌러서 알 수 있습니다.
 그러나이 부분의 인식은 사람들이 화면에서 빛나는 픽셀에 대해 무엇을 알고 있는지 이야기하는 것입니다.
 사람들은 이전에 iOS를 사용 해본 경험과 현재의 상황, 그들이 이해할 수도 있고 이해하지 못할 수도있는 앱에서이 전화를 사용하고 있기 때문에 iPhone 화면에서 상호 작용할 수있는 것만 알게됩니다.
 그럼 이것을 우리의 토스트 앱에 적용 해 봅시다.
 이 버튼을 누를 때 일어날 일을 어떻게 알 수 있습니까? 그냥 버튼을 올리면 괜찮습니다. 아니오.
 우리가하는 일은 레이블을 제공하는 것입니다. 레이블은 사람들에게 문자 그대로 무엇이 일어날 것인지를 말하고있는 피드백입니다.
 이 특별한 경우에는 토스트 라벨을 시험해 보았습니다.하지만 불행히도 토스트는 토스트에 대한 동사를 의미하며 아침 식사로 먹을 빵의 맛있는 부분을 나타냅니다.
 토스트 토스트는 어떻게해야할까요? 아니.
 이 버튼에 대한 아이콘을 디자인하려고 할 수는 있지만, 특히 익숙하지 않은 상황에서 사람들이 처음으로 접하게 될 것 같은 경우에 특히 그렇다고 생각하지 않습니다.
 그래서 우리는 그것에 대해 조금 생각하고 토스트 만들기라는 문구를 생각해 내었습니다.
 우리 다이어그램에서 이것을 요청 토스트라고 부릅니다. 그러나 우리는 사람들이 우리 애플 리케이션을 사용하는 사람들이 이해할 수 있고 우리 애플 리케이션에 가장 안락하다고 생각하는 데 시간을 들였습니다.
 다음으로 생각해야 할 것은 이것이 버튼이라는 것을 어떻게 알 수 있습니까? 검정색 ​​바탕에 떠있는 직사각형만으로는 충분하지 않을 수 있습니다.
 그러나 iPhone 화면과 같은 컨텍스트를 추가하면이를 이해하기 시작하거나 사전 경험을 추가 할 수 있습니다.
 버튼 모양, 렌더링 방식 또는 텍스트 색상만으로 일관되게 사용할 수 있습니다.
 이 경우 사람들이 우리 앱에 익숙해 져서 하루에 한 번씩 출시 될 것이라고 생각하지 않습니다. 운이 좋다면 더 많은 표준 iOS 버튼 모양에 집중할 것입니다. 왜냐하면 우리는 새로운 것을 던지고 싶지 않기 때문입니다.
 그래서 우리는 이것들을 화면에 보여줍니다.
 이 버튼을 사용하기 전에 피드백과 관련하여 생각할 수있는 또 다른 사항은이 버튼과 관련된 내용을 어떻게 알 수 있습니까?
 앱에서 버튼이있는 위치에 대해 뭔가있을 수 있습니다.이 버튼은 다른 의미와 느낌을 가지고 있습니다.
 또는 다른 컨트롤과 그룹화 된 방법 또는 화면의 다른 개체와 얼마나 가까운 지에 대한 내용 일 수 있습니다.
 이 마지막 화면이 마음에 들기 시작 했으므로 실제 화면에서 다시 시도하겠습니다.
 기조 연설에서이 사용자 인터페이스를 뽑아서 전화기에 넣은 다음 토스트를 주문하기 전에 아침에 사용하기를 기대할 수있는 침실에서이 전화를 잡고 있습니다.
 그리고 저는이 버튼이 무엇을 하는지를 이해하려고 노력하고 있습니다.
 다음으로 우리가 생각해야 할 것은이 버튼과 상호 작용할 때 일어나는 일입니다.
 육체적 인 단추를 위해 나는 그것을 안으로 누르고있을 것입니다.
 이제 피드백이라는 용어는 사람들에게 무슨 일이 일어 났는지에 대한 결과를 말하며이 경우에는 아직 실제로 아무것도하지 않았기 때문에이를 위해 피드 포워드라는 용어를 사용할 수 있습니다.
 피드 포워드는 사람들이이 버튼과 상호 작용할 때 일어나는 일을 이해하도록 돕는 것을 의미하기 때문입니다.
 피드 포워드는 상호 작용이 유동적 인 느낌을주는 요소로, 3 차원 터치, 핀치 또는 슬라이드 동작과 같은 것에 대한 응답 성을 전달할 수 있습니다.
 피드 포워드가 우리 버튼에 어떻게 적용되는지 생각하면, 지금 일어나고있는 일과 내 손가락이 화면과 접촉하는 동안 일어나는 일을 그 버튼으로 생각해야합니다.
 전반적인 토스트 시스템의 경우 토스트를 요청하는 버튼을 터치하는 중입니다.
 그래서 우리가 초점을 둘 부분은 토스터가 준비되고 결국 토스트를 만드는 토스터로 전환하는 것입니다.
 우리는 무슨 일이 일어나고 있는지, 어떻게 될지에 대해 어떻게 생각 하는지를 생각해야합니다.

이 버튼을 터치하기 시작했다고 가정 해 봅시다.이 버튼을 탭하기 시작한 것을 어떻게 알 수 있습니까? 왜 문제가되는 것입니까? 글쎄, 하나의 경우,이 버튼의 히트 영역은 당신이 기대하는 것과 다를 수 있습니다.
 그러나 아마도 히트 영역은 실제로 시각적 크기보다 약간 크며,이 레버를 대화식으로 만들면 아주 작은 컨트롤에서 특히 중요합니다.
 그렇다면이 버튼을 탭하기 시작한 것을 어떻게 알 수 있습니까? 버튼을 움직이게하거나, 느리게 퍼지거나, 천천히 성장시키려는 유혹에 빠지 긴하지만, 반응이 느껴질 수 있습니다.
 이러한 종류의 애니메이션은 3 차원 터치가 적절하게 응답 할 때 3 차원 터치에 적합 할 수 있습니다.
 그러나 스크린과의 신속한 접촉을 위해 우리는 애니메이션을 매우 빠르게 처리하려고 할 때 더 빠른 작업을 원할 수 있습니다.
 그래서 우리가하는 일은 확인 소리, 햅틱 또는 시각적 변화를 제공하는 것입니다.
 이 경우에는 즉시 강조 표시하여 조금 더 빠르게 느끼게 할 것입니다.
 또한 버튼이 활성화되어 있고 작동 할 수 있음을 알 수 있습니다.
 어쩌면 우리는 버튼에있는 피드 포워드를 토스터 자체의 피드 포워드에 연결하려고 시도 할 것입니다. 나는 앞으로 일어날 일에 대한 암시를 시작할 수 있다고 말했을 것입니다.
 그래서 여기서 내가 시도하는 것은 내가이 버튼을 만지면 나타나는 것처럼 보인다.
 그래도이 버튼에 대해서는 조금 너무 어려울 것 같아서 앞으로 나아갈 생각은 없지만 시도해 보았습니다.
 피드 포워드로 생각해야 할 또 다른 일은 내가 마음을 바꾼다면 어떻게 될까? 나는 아침에 비틀 거리는 소리가 들린다. 나는 전화기를 들고 실수로이 버튼을 만졌지 만 토스터기를 시작하고 싶지 않다. 아직.
 대부분의 버튼에서 손가락을 드래그하여 취소 할 수 있습니다.
 이것은 실제로 모든 종류의 유체 상호 작용에있어 매우 중요한 것입니다. 유체 상호 작용을 미정으로 만드는 이유이기 때문입니다.
 다른 화면으로 이동하는 경우 손가락을 뗄 때까지 똑같은 일이 끝날 때까지 어떤 화면이 표시되는지 모릅니다. 아주 간단한 버튼에도 똑같은 내용이 적용됩니다.
 내 손가락을 버튼 안에 다시 가져올 수 있고 동일한 피드 포워드를 표시하여이 버튼을 다시 활성화 할 수 있음을 보여줄 수 있습니다.
 이제 우리는 피드 포워드 (feedforward)에 대해 조금 결정 했으므로이를 장치에서 사용해 봐야합니다.
 다시 한번 말하지만, 이것은 버튼에 대해 매우 단순한 것처럼 보입니다.하지만 이것은 스크롤, 핀치, 페이징, 많은 터치 상호 작용에 매우 중요합니다.
 마지막으로,이 버튼에서 손을 떼면 피드백을 적용하는 방법에 대해 생각해야합니다.
 물리적 버튼의 경우 원래 상태로 돌아갑니다.
 화면상의 버튼을 위해 우리는 손가락을 화면에서 들어 올릴 것입니다.
 이것은 물론 대부분의 사람들이 익숙한 고전적인 피드백의 영역입니다.
 그러나 여기서 지적하고 싶은 것은 버튼 자체와 액션, 결과에 대한 피드백 모두를 생각할 수 있다는 것입니다. 두 가지를 연결하는 방법에 대해 생각할 수 있으므로 사람들이 무슨 일이 일어 났는지 이해할 수 있습니다.
 다시 말하면, 우리 시스템에서는 사람들을 토스트로 만드는 것에 초점을 맞추고 있습니다.
 그렇다면이 버튼에서 손가락을 떼면 어떻게됩니까? 광도계가 즉시 발생합니까 아니면 약간의 지연이있어 빠른 도청을 볼 수 있습니까? 타이머가 있습니까?이 버튼은 더블 탭을 지원합니까? 그렇다면 확인을 표시하기 전에 잠시 기다려야 할 수도 있습니다. 두 가지 피드백 유형을 생각해 보면 사람들에게 무슨 일이 일어나는지 문자 그대로 말할 수 있습니다.
 화면에 텍스트를 넣을 수는 있지만 매우 명확하지만 읽기와 텍스트가 더 필요합니다.
 어쩌면 우리는 사람을 보여줄 수 있습니다. 아마도 버튼 자체가 깜박 거리거나 피드백을 제공하는 행동을 나타내는 무언가일지도 모릅니다.
 예를 들어, 토스터 그 자체의 아이콘으로 토스트를 시작한다는 것을 알 수 있습니다.
 아니면 우리가 할 수있는 일은 두 가지를 모두 할 수 있다는 것입니다. 텍스트를 화면에 표시 할 수 있으며 토스터를 보여줄 수 있습니다.
 이 애니메이션을 놓친 것 같아서 좋지만 토스터기가 어떤 상태인지 여전히 볼 수 있습니다.
 그러나 피드 포워드를 사용하여 버튼과 상호 작용하는 것과 비슷하게 마음이 바뀌면 어떻게 될지 생각해야합니다.
 토스트를 시작했는데 취소하고 싶을 수도 있습니다. 토스터를 멈추고 싶을 수도 있습니다.
 버튼을 토스트 토스트 버튼으로 대체 할 수는 있지만,이 버튼은 이전에 토스트 버튼을 만들었던 것처럼 굉장히 많이 보이기 때문에 명확하지 않습니다.
 그래서 별도의 중지 버튼이있을 수 있습니다.
 빨간색이 조금 너무 많아서 같은 버튼을 사용해도되지만 토스트 버튼을 만들지 않아도됩니다.
 이것은 조금 더 나아지기 시작 했으므로, 다시 장치에서 시도해보십시오.
 우리는 버튼 자체에 대한 피드백이 어떻게 일어 났는지 의사 소통하는 토스터의 피드백에 어떻게 연결되는지를 알아야합니다.
 내가 뭘 간 건지 간략히.

의견은 앱이하는 일을 사람들에게 알리는 방법입니다.
 말 그대로 사람들에게 말할 수 있습니다. 텍스트를 화면에 표시하거나 사람을 보여줄 수 있습니다. 시간이 지남에 따라 변경 사항을 경험할 수 있습니다.
 상호 작용의 세 단계 (간단한 버튼)에 대해서도 피드백을 적용 할 수 있습니다.
 그리고 제가 암묵적으로 여기에서 한 것은 너무 작고 너무 많은 것을 이해하는 옵션을 시도하는 것입니다.
 애니메이션이 적합한 지 아닌지를 실제로 알 수있는 유일한 방법은 시도하는 것입니다.
 그래서 우리가 여기에서 한 것은 훨씬 더 큰 시스템의 매우 중요한 부분을 디자인 한 것이지만, 일단 우리가이 한 조각을 올바르게 얻으면 나머지 부분의 흐름을 이해하는 것이 훨씬 쉬울 것이라고 생각합니다.
 이제 버튼이 디자인되었고 사운드에 대해 생각할 수있을 것 같아서 Hugo를 무대에 초대하고 싶습니다.
  Julian, 고마워.
 안녕하세요.
 이제이 버튼을 빠르게 클릭하고 간단한 클릭 사운드를이 버튼에 추가 할 수 있습니다.
 꽤 좋은 소리인가, 아니면 더 좋을까요? 줄리안이 더 잘 해냈고 좀 더 일찍 나를 초대했을까요? 필자는 사운드 디자이너가 이와 같은 프로젝트에 어떻게 접근 할 수 있는지에 대해 몇 가지 이야기하고 싶습니다.
 저는 영감을 찾고자 할 때, 사운드를 디자인 할 때, 그리고 이것을 할 때 사용하는 핵심 빌딩 블록에 대해 이야기 할 것입니다.
 그러나 우리가 다이빙하기 전에 왜 우리가 소리에 대해 이야기합니까? 이제 여러분 중 일부는 사용자가 휴대 전화에서 소리를 아주 자주 묵음 처리한다고 생각할 수 있습니다. 내 앱에 소리를 추가하는 것이 중요합니까? 음, 물론 당신에게 달려 있지만 조지 루카스 (George Lucas)는 영화 경험의 50 %는 음악과 사운드 디자인에 의해 우리가 듣는 것에 따라 결정된다고 말했습니다.
 그리고 소리는 우리 주변에 있습니다. 우리는 그것을 사용하여 세계를 탐색합니다.
 사운드는 제품의 경험을 풍부하게 해줍니다.
 또한 앱과 브랜드의 경험을 기억하는 데 도움이되므로 큰 영향을 미칠 수 있습니다.
 그렇다면 버튼 사운드를 디자인 할 때 어디에서 영감을 얻으려고합니까? 우리는 약간의 우회로를 시작하고 실제 버튼을 살펴 보는 것으로 시작할 수 있습니다.
 그들 중 일부는 값싼 재료로 만들어졌고 이와 같이 소리가 나는 반면, 다른 것들은 고품질의 재료로 만들어지고 이와 같이 들립니다.
 물론 이것은 실제로 iPhone X에서 볼륨 버튼을 녹음 한 것이 었습니다. 물론 우리는 그것을 꽤 많이 증폭 시켰습니다.
 이 소리는 본질적으로 부산물이지만, 단추가 만들어진 재료에 의해 정의되는 것은 아닙니다.
 그러나 우리는 소프트웨어를 위해 설계 되었기 때문에 자유가 많기 때문에 소리를 전혀 내지 않고 자주 할 수 있습니다.
 그러나 우리가 UI 요소에 소리를 추가하는 것이 유용하다고 결정하면 실제 아날로그에서 신호를 받아서 이러한 UI 사운드에 의미를 추가하고 사용자가 이해할 수 있도록 할 수 있습니다.
 이제 앱에 사운드를 추가하고 싶습니까? 글쎄, 앱이 속하는 카테고리, 누가 앱을 사용할 것인지, 그들의 기대치는 무엇인지, 문맥은 무엇인지, 앱은 어디에서 사용되는지에 달려있다.
 우리의 애플 리케이션을 위해 우리는 그것이 토스트를 먹는 것을 좋아하고 부엌에서 토스트를 만드는 데 익숙한 사람들에 의해 사용될 것이라는 것을 알고 있지만, 지금부터는 집안 어느 곳에서나 만들 수 있습니다.
 그들은 부엌에서 토스터기를 사용하는 데 익숙한 가청 신호를 사용할 수 있지만 이러한 이유로 우리는이 앱이 소리를 사용하기에 완벽한 후보라고 생각합니다.
 토스트를 만들고 우리가 만나는 소리를 듣는 과정을 살펴 봅시다.
 이 사운드가 유용하고 우리 디자인에서 사운드를 사용하고 싶은지 여부를 정의합시다.
 그래서 Julian의 타임 라인을 사용하고이 토스터가 만드는 소리를 들어 봅니다.
 먼저 레버를 당겨서 제 위치에서 눌러줍니다.
 이제 우리가 듣는 것은 코일의 미묘한 윙윙 거리는 소리로 가열되는 토스터입니다.
 토스트가 끝날 때까지 토스터가 토스트를 꺼낼 때까지.
 이제 이러한 단계를 하나씩 살펴 보겠습니다.
 첫째로 우리가 레버를 당길 때 스프링의 저항을 느낄 때, 우리가 앱에서 일어나는 것과 비교하면 사운드 햅틱과 애니메이션을 디자인하고 모두 동기화하는 것과 같습니다.
 그러나 우리는이 버튼을 간단한 버튼으로 바꾸기로 결정 했으므로 사운드를 디자인 할 필요가 없습니다.
 우리가 단추를 누르는 축배를 요청할 때, 다음 단계는 줄리안이 나에게 소리를 디자인하도록 요청한 것입니다. 그래서 그것에 착수하도록하겠습니다.
 우리는 소리를 녹음 할 수 있고 전자 악기와 신디사이저를 사용하여 소리를 생성 한 다음 소프트웨어를 사용하여이 소리를 올바른 모양으로 나타낼 수 있습니다.
 이제 저는 오늘 이것에 대해 자세히 설명하지는 않겠지 만 작년의 이야기 Designing Sound가이 과정에 대해 더 알고 싶다면 시청하십시오.
 결국 우리는 세 가지 옵션을 생각해 냈습니다.
 이것은 옵션 A이며, 이것은 옵션 B이며 이것은 옵션 C입니다.
 이제는 옵션 A가 아주 단순합니다. 간단합니다. 앱의 간단한 UI로 잘 작동하지만 누락 된 부분이있는 것처럼 느낍니다.

그리고 우리는이 소리를 디자인하는 동안이 소리가 두 번 클릭하면 훨씬 만족 스럽다는 것을 알았습니다. 하나는 손가락을 떼면 손가락 하나는 손가락을 떼면됩니다.
 이제 B 옵션에는이 문자가 있지만 지금은 훨씬 현실감있는 소리입니다. 실제로는 토스터처럼 들리지는 않지만 실제 품질은 있습니다.
 같은 이유로 약간 가혹하고 약간의 소리가납니다.
 그리고 나서 옵션 C가 있습니다. 이상한 것이지만 캐릭터가 있습니다. 다시 앱을 사용하면 다시들을 수 있다면 인식할만한 사운드입니다.
 이 사운드에 대한 또 다른 좋은 점은이 톤 확인이 내장되어 있다는 것입니다. 이는 작업이 성공했다는 체크 표시를하는 것과 같습니다.
 나는이 말을들을 수 있는지 한번 더 알아볼 것입니다.
 그리고 이러한 모든 이유들 때문에 옵션 C가 내가 추천 할만한 것, 단순한 소리, 친숙한 성격을 지닌 것, 그리고 그것은 다른 어떤 앱에서도 인식 할 수없는 독특한 것이라고 생각합니다.
 우리가 끝난 것처럼 보이므로 적어도 버튼을 클릭하게 만들었지 만 우리는 아직 토스트를 만들지 않았습니다.
 자, 어쩌면이 앱에서 소리를 사용할 수있는 다른 기회가 있습니다.
 이제는 훌륭한 사운드 디자이너로서 우리는 전체 이야기를 말하고 싶습니다.
 그래서 우리 버튼을 누르면 토스터가 가열되고 우리는이 미묘한 윙윙 거리는 소리를 듣습니다.
 이제 우리는이 모든 소리에 도움이 될 수 있습니까? 어쩌면 장치의 상태에 대해 알려줄 수 있습니다.
 그래서 우리는 앱에서 이와 유사한 사운드를 재생할 수도 있습니다. 연속 사운드 일 수도 있습니다.
 토스트를 만드는 데 몇 분이 걸릴 수도 있고,이 소리가 반복해서 반복되는 것은 우리가 찾고있는 경험이 아닐 수도 있습니다.
 그렇다면 30 분마다 페이드 인 / 페이드 아웃하는 타이머 사운드와 같이 좀 더 미묘한 것이 어떨까요?
 그것은 효과가있을 수 있습니다.
 그러나 우리가 실제로 기다리고있는 것이 다음에 오는 것, 즉 우리의 축배가 끝났을 때 이것이 우리에게 사용자들에게 알려주고 싶은 것이기 때문에 그것이 정말로 중요한 소리 일 것인가?
 그래서 우리는 그들이 놓치지 않을 깨끗하고 간단한 알림 사운드를 재생하려고합니다.
 [알림 소리] 좋아, 이제이 소리들을 함께 들어 보자.
 먼저 버튼을 누른 다음 프로세스가 활성화되었을 때 다음 단계로 진행하기로 결정했습니다. 알림이 도착하고 토스트가 완료 될 때까지 사운드가 실제로 필요하지 않습니다.
 그리고이 소리를 함께 듣는 것이 중요합니다. 왜냐하면 우리의 앱이 사용자와 통신하는 방식이기 때문에 가족이 함께 잘 지내고 있는지, 이것이 앱의 목소리입니다.
 이제 우리 앱의 모양이 좋아졌습니다.
 어떤 종류의 사운드를 디자인 할 때 우리가 사용하는 사운드의 핵심 빌딩 블록에 대해 말씀 드리고자합니다.
 첫 번째는 음색 또는 음색입니다.
 그리고 대부분의 사람들이이 사실을 즉시 인식합니다.
 피아노 맞아요.하지만 어떻게 피아노인지 알 수 있나요? 그것이 비브라폰이 아니라는 것을 어떻게 알 수 있습니까? 악기가 만들어지는 재료, 모양, 망치, 망치, 활 또는 손을 사용하여 연주되는 방식에 따라 결정됩니다.
 따라서이 악기들은 정확히 같은 음색을 재생할 수 있지만 매우 다른 사운드를 재생합니다.
 이제 우리의 앱을 위해 우리는 인물을 찾아 가기로 결심했습니다. 친절한 음질과 너무 거칠거나 메탈하지 않은 음색을 선택했습니다.
 다음은 주파수 또는 소리의 음정입니다.
 일부 악기는 매우 높은 주파수에서 재생되고 다른 악기는 매우 낮은 주파수에서 재생됩니다.
 또한 매우 높거나 낮은 주파수에서 비 음향적인 사운드를 재생할 수 있습니다.
 그리고 우리가 이것을 할 때 그것은 물체의 크기를 알려줍니다.
 따라서 토스터를 꺼내 토스트 방출 사운드를 녹음하면 아주 작은 빈 토스터처럼 들리는 매우 높은 주파수에서 재생합니다.
 그러나 우리가 같은 소리를 듣고 그것을 낮은 주파수로 연주하면 거대한 거대한 토스터처럼 들립니다.
 다음은 지속 시간 또는 소리의 길이입니다.
 소리가 매우 짧거나 오래 울릴 수 있습니다.
 UI 사운드를 디자인하면 버튼이 여러 번 반복 될 것이므로이 사운드가 매우 짧고 미묘한 것이 중요합니다.
 그러나 실제로는 우리의 건배 용 앱의 경우에 한 번만 누르면, 좀 더 정교하면 더 길어도 괜찮습니다.
 실제로이 사운드는 앱을 사용할 때마다 한 번만 재생됩니다.
 그리고 큰 소리 또는 진폭 또는 음량이 있습니다.
 이제 우리가 사용자가 놓치지 않기를 바라는 벨소리 나 경보 음을 디자인 할 때 우리는 전화를 놓치거나 경보를 통해 잠을 자고 싶지 않습니다.
 우리 오디오 엔지니어 인 미치가 방의 뒷쪽에서 전화를하고 있습니다. 나는 그 소리를 크게 들었습니다.
 하지만 UI 사운드가 이렇게 커지면 불쾌해질 것입니다.
 상호 작용에이 미묘한 [들리지 않음] 레이어를 추가하기 만하면됩니다.
 이제 미치에게 빨리 대답하겠습니다.

[Keyboard Sound] 시끄러운 환경에 있기 때문에이 키보드 사운드를 놓치게된다면 큰 문제는 아니지만 확실히 내 벨소리를 놓치고 싶지는 않습니다.
 그래서 소리의 4 가지 구성 요소, 우리의 음색, 주파수, 지속 시간 및 소리 크기를 요약하십시오.
 사운드를 디자인하고 앱에 사운드를 추가하는 것에 대해 생각하기 시작하면이를 명심해야합니다.
 그리고 그것은 오늘 제가 소리에 관해 이야기하고 싶은 것을 결론지었습니다. 그러나 세션을 끝내기 전에 이것들은 줄리안과 제가 여러분에게 남겨주 고자하는 가장 중요한 것들입니다.
 세부 사항은 마치 클릭 사운드처럼 간단하더라도 버튼처럼 간단하더라도 분명하게 보이도록 설계되었습니다.
 이제 실제 요소에서 영감을 얻을 수 있지만 일대일로 복사 할 필요가 없습니다.
 또한 완전히 독특하고 신선한 것을 창조하기위한 소프트웨어 설계의 자유와 유연성을 사용하십시오.
 그리고 우리가 보는 것, 애니메이션, 그리고 우리가 느끼는 것, 촉감, 그리고 우리가 듣는 것, 소리, 그들은 모두 하나의 단일 경험으로 결합됩니다.
 그리고 마지막으로,하지만 가장 중요한 것은 사물을 시험해 봄으로써 배웁니다.
 우리는 오늘 우리가 많은 것을 시험해 보았고 어떤 사람들은 잘 작동하지 않았고 다른 사람들은 잘 작동했다는 것을 알고 있습니다.
 그러나 우리가 알아낼 수있는 유일한 방법은 먼저 그들을 밖으로 시도하는 것입니다.
 이제이 모든 것이 당신이 일반적으로 당연하다고 여길만한 세부 사항에 더 많은 시간을 할애하게되기를 바랍니다.
 이러한 세부 사항을 올바르게 파악하면 앱을 훨씬 더 훌륭하게 만들 수 있습니다.
 듣기에 감사드립니다. 좋은 하루 되세요.
