안녕 모두들.
 고맙습니다.
 안녕하십니까. Turi Create에 관한 우리 세션에 오신 것을 환영합니다.
 이 세션은 어제의 ML 작성 세션을 기반으로합니다.
 이 세션에서는 Swift에서 기계 학습의 기초를 다뤘습니다.
 그래서 당신이 그 세션을 잡지 않았다면 당신을 감시 목록에 추가하는 것이 좋습니다.
 Turi Create의 목표는 지능형 사용자 경험을 앱에 추가하는 것입니다.
 예를 들어 아침 식사 사진을 찍을 수 있습니다.
 여러 가지 칼로리가 얼마나 많은지 확인하려면 여러 가지 음식 항목을 탭하십시오.
 아니면 iPhone과 간단한 동작을 사용하여 전구를 제어하고 싶을 수도 있습니다.
 어쩌면 당신은 사무실에 개가 없으면 강아지의 개나 그림처럼 실시간으로 물체를 추적하기를 원할 것입니다.
 어쩌면 게임에 맞춤식 아바타가 있고 사용자가 선택한 수염을 기반으로 헤어 스타일과 같은 맞춤 추천을 제공하려고 할 수 있습니다.
 또는 사용자가 자신의 사진에 예술적 스타일이나 필터를 적용 할 수있게 할 수도 있습니다.
 이들은 매우 다른 사용자 경험입니다.
 그러나 그들은 공통점이 몇 가지 있습니다.
 무엇보다 먼저 기계 학습을 사용합니다.
 이러한 경험은 모두 아주 적은 데이터로 만들 수 있습니다.
 이 모든 모델은 Turi Create로 만들어졌으며 Core ML로 배포되었습니다.
 그들은 모두 다섯 가지를 따르며, 오늘날 우리가 거쳐야 할 5 단계 조리법과 동일합니다.
 그리고이 데모 어플리케이션은 모두 우리 연구소에서 사용할 수 있습니다.
 따라서 ML 실험실을 위해 오늘 또는 금요일에 저희와 함께하십시오. 직접 체험 해보십시오.
 Turi Create는 Core ML 모델을 만드는 데 도움이되는 Python 패키지입니다.
 사용하기 쉽기 때문에 ML 전문가가 될 필요가 없으며 이러한 재미있는 사용자 경험을 만들기 위해 기계 학습에 대한 배경 지식을 가질 수도 있습니다.
 무엇보다 먼저 업무에 집중함으로써 사용하기가 쉽습니다.
 우리가하는 일은 복잡한 기계 학습 알고리즘을 추상화하여 작성하려는 사용자 경험에만 집중할 수 있도록하는 것입니다.
 Turi Create는 크로스 플랫폼이므로 Mac과 Linux에서 모두 사용할 수 있습니다.
 또한 오픈 소스이기도합니다.
 우리는 GitHub에 관한 레포를 가지고 있으며 방문을 희망합니다.
 시작하려면 많은 리소스가 필요합니다.
 또한 개발자 여러분과 다른 개발자 커뮤니티와 협력하여 Turi Create를 시간이 지남에 따라 더욱 개선되기를 기대합니다.
 오늘 우리는 Turi Create 5의 베타 릴리스를 발표하게 된 것을 기쁘게 생각합니다.
0을 사용할 수 있습니다.
 여기에는 몇 가지 강력한 새로운 기능이 있습니다.
 GPU 가속과 비슷합니다.
 그리고 우리는 나중에이 기능에 대해 자세히 설명 할 것입니다.
 오늘 주요 초점은 Core ML 모델을 만들기위한 5 단계 레서피가 될 것입니다.
 나는이 단계들을 높은 단계로 넘어 서서 시작할 것입니다.
 그리고 나서 우리는 몇 가지 데모와 코드를 살펴볼 것입니다.
 따라서 필요한 첫 번째 단계는 성취하려는 작업을 이해하는 것입니다.
 그리고 우리는 기계 학습 용어로 그 작업을 어떻게 참조할까요?
 둘째,이 작업에 필요한 데이터 유형을 이해해야합니다.
 그리고 얼마나 많이.
 셋째, 모델을 만들어야합니다.
 넷째, 그 모델을 평가할 필요가 있습니다.
 이는 모델의 품질을 이해함과 동시에 생산 준비가되었는지 여부를 의미합니다.
 마지막으로, 모델을 전개 할 준비가되었을 때, Core ML을 사용하는 것이 정말 쉽습니다.
 이 단계들 각각에 대해 좀 더 자세히 살펴 봅시다.
 Turi Create를 사용하면 다양한 일반 기계 학습 작업을 수행 할 수 있습니다.
 또한 다양한 유형의 데이터로 작업 할 수 있습니다.
 예를 들어 이미지가있는 경우 이미지 분류에 관심이있을 수 있습니다.
 또는 객체 감지.
 사용자에게 맞춤형 권장 사항을 제공 할 수 있습니다.
 걷거나 점프하는 잭과 같은 활동을 자동으로 감지 할 수 있습니다.
 한 블록의 텍스트가 주어진다면 사용자 감정을 이해하고 싶을 것입니다.
 또는 분류 및 회귀와 같은보다 전통적인 기계 학습 알고리즘에 관심이있을 수 있습니다.
 이제 우리는 이것이 기계 학습을 처음 접하는 사람들에게 혼란을 줄 수 있음을 알고 있습니다.
 그래서 우리는 문서에서 이것을 쉽게 만들 수있는 찔림을 만들었습니다.
 우리는 가능한 작업의 유형을 이해하고 기계 학습 용어로이를 참조하는 방법을 이해하는 데 도움을주기 시작합니다.
 이제 우리가 할 수있는 일은이 프리젠 테이션의 시작 부분에서 살펴본 지능적인 경험을 재검토하고이를 기계 학습 과제에 할당하는 것입니다.
 예를 들어, 사진에서 다양한 종류의 꽃을 인식하려면 이미지 분류라고 부릅니다.
 아침 식사 사진을 찍고 그 안에있는 다양한 음식 물건을 이해하기를 원한다면, 우리는 그것들을 그 물건 탐지라고 부릅니다.
 자신의 사진에 예술적 스타일을 적용하려면 스타일 전송이라고 부릅니다.
 다른 장치의 센서를 사용하여 제스처 또는 동작 또는 다른 활동을 인식하려는 경우 해당 활동 분류라고합니다.
 마지막으로, 사용자에게 개인화 된 권장 사항을 작성하려는 경우이 작업 권장 시스템을 호출합니다.
 이제 위대한 것은 우리가 방금 걸어온 5 단계 조리법이 코드에도 적용된다는 것입니다.

Turi Create를 가져 오기부터 시작합니다.
 우리는 SFrame이라는 데이터 구조에 데이터를로드합니다.
 그리고 곧 SFrame 데이터 구조에 대해 좀 더 자세히 설명 할 것입니다.
 간단한 함수로 모델을 만들겠습니다.
몹시 떠들어 대다.
 이 기능은 배후에서 배우는 복잡한 기계를 추출합니다.
 우리는 간단한 함수로 모델을 평가합니다.
평가하다.
 마지막으로 결과 모델을 코어 ML의 ML 모델 형식으로 내 보내어 Xcode로 쉽게 드래그 앤 드롭 할 수 있습니다.
 이제이 동일한 5 단계 템플릿이 Turi Create 내의 모든 다른 작업에 적용된다고 언급했습니다.
 따라서 객체 탐지, 이미지 분류 또는 활동 분류에 상관없이 동일한 코드 템플릿이 적용됩니다.
 오늘 첫 데모에서는 개체 감지 모델을 사용하는 칼로리 계산 앱을 살펴볼 것입니다.
 그래서 우리는 이미지 내의 다른 음식을 인식하기를 원할 것입니다.
 그리고 우리는 그 음식이 어디 있는지, 그 음식이 어디에 있는지 알 필요가 있습니다. 그래서 우리는 다른 칼로리 카운트를보기 위해 그것들을 이용할 수 있습니다.
 이제이 기계 학습 모델을 작성하는 데 필요한 데이터 유형을 살펴 보겠습니다.
 물론 이미지가 필요합니다.
 그리고 우리가 단순한 이미지 분류 자 ​​모델을 구축했다면 이미지 전체를 묘사하는 일련의 이미지와 레이블이 필요할 것입니다.
 그러나 우리는 물체 감지를 수행하기 때문에 조금 더 많은 정보가 필요합니다.
 이미지에 무엇이 포함되어 있는지를 이해해야합니다.
 그러나 그 대상들은 어디에 있는가.
 이제 한 가지 예를 조금 더 확대하면 커피 한 잔 주위에 빨간색 상자가 보입니다.
 그리고 주위에 녹색 상자는 크로와상.
 상자를 상자로 묶고 JSON 형식으로 표시합니다.
 레이블을 사용하고 좌표 x, y, 너비 및 높이를 사용합니다.
 여기서 x와 y는 경계 상자의 중심을 나타냅니다.
 따라서 객체 감지 기능을 사용하면 여러 이미지, 각 이미지 내의 여러 객체를 참조하거나 감지 할 수 있습니다.
 그래서 우리는 SFrame이라는 표 형식의 데이터 구조에 데이터를로드 할 것이라고 언급했습니다.
 이 예제에서는 두 개의 열로 끝납니다.
 첫 번째 열에는 이미지가 포함됩니다.
 두 번째 열은 주석을 JSON 형식으로 포함합니다.
 이제는 SFrame이 무엇인지 궁금 할 것입니다. 그럼 한발 뒤로 물러나서 그것에 대해 더 자세히 알아 보겠습니다.
 SFrame은 [들리지 않음] 표 형식의 데이터 구조입니다.
 이것이 의미하는 바는 랩탑에서 기계 학습 모델을 생성 할 수 있다는 것입니다.
 엄청난 양의 데이터가 있더라도.
 SFrame을 사용하면 일반적인 데이터 조작 작업을 수행 할 수 있습니다.
 두 SFM을 결합하거나 데이터의 특정 행이나 열을 필터링하는 것과 같습니다.
 SF 프레임은 모든 다른 데이터 유형으로 작업하게합니다.
 또한 SFrame에 데이터를로드하면 데이터를 시각적으로 탐색하고 검사 할 수 있습니다.
 SFrame으로 가능한 것을 조금 더 자세히 살펴 보겠습니다.
 우리의 물체 감지기 예제.
 따라서 Turi Create를 가져온 후에 객체 감지기의 경우 실제로 두 개의 서로 다른 SFrame을로드하게됩니다.
 첫 번째 이미지에는 주석이 포함되고 두 번째 이미지에는 이미지가 포함됩니다.
 우리에게는 간단한 기능이 있습니다.
탐색하면 가져온 데이터를 시각적으로 검사 할 수 있습니다.
 특정 행에 액세스하는 것과 같은 작업을 수행 할 수 있습니다.
 또는 우리의 데이터 열.
 물론 우리는 두 개의 SF 프레임을 하나의 프레임으로 결합하는 것과 같은 일반적인 작업을 수행 할 수 있습니다.
 나중에 사용할 수 있도록 SFrame을 저장하거나 동료와 공유 할 수 있습니다.
 다음으로 우리 모델을 만듭니다.
 그래서 우리는이 간단한 기능을 가지고 있다고 언급했습니다.
실제 모델을 만드는 데 필요한 많은 노력을합니다.
 그리고 우리가 백그라운드에서 수행하는 일은 우리가 당신을 위해 창조 한 모델이 작업에 맞게 커스터마이징되어 최신 상태인지 확인하는 것입니다.
 우리가 얻을 수있는만큼 높은 품질과 높은 정확성을 의미합니다.
 또한 많은 양의 데이터를 보유하고 있거나 소량의 데이터를 보유하고 있어도이를 수행 할 수 있습니다.
 우리의 모든 작업은 객체 클래스에서 탐지하려고하는 항목 당 약 40 개의 이미지만큼 적은 양의 데이터를 가지고 있는지 여부에 관계없이 매우 중요합니다.
 물체 감지의 경우.
 평가로 넘어 갑시다.
 그래서 나는 우리에게 간단한 기능이 있음을 언급했다.
그것을 평가하면 모델의 품질에 대한 아이디어를 얻을 수 있습니다.
 물체 감지기의 경우.
 고려해야 할 두 가지 요소가 있습니다.
 먼저 레이블을 얻었습니까? 그러나 우리는 객체 주위에 경계 박스가 있는지를 알아야합니다.
 따라서 우리는이 두 가지 요인에 대한 간단한 척도를 수립하고 우리가 지상 진실 데이터라고 부르는 것에 대해 테스트 데이터 세트를 예측하여 득점 할 수 있습니다.
 그래서 우리는 올바른 라벨을 가지고 있는지 확인하기를 원합니다.
 그런 다음 표준 메트릭은 지상 진리 경계 상자와 비교할 때 예상 경계 상자에서 50 % 이상 중첩됩니다.
 몇 가지 예를 살펴 보겠습니다.
 이 예측에서 우리는 모델이 바로 커피 한 잔으로 레이블을 얻었음을 알 수 있습니다.
 그러나 경계 상자는 실제로 커피 전체를 덮지는 않습니다.

그것은 단지 지상 진실과 겹치는 약 10 퍼센트에 불과합니다.
 그래서 우리는 그 나쁜 예측을 고려할 것입니다.
 여기서 우리는 매우 정확한 바운딩 박스를 보았습니다, 그러나 우리는 라벨을 잘못 잡았습니다.
 그건 바나나가 아니야.
 따라서 성공적인 예측을 고려하지 않겠습니다.
 이제이 중간 예제가 우리가보고 싶은 것입니다.
 우리는 바운딩 박스의 70 % 중복과 올바른 라벨 인 커피를 가지고 있습니다.
 따라서 우리가 할 수있는 것은 테스트 데이터 세트로 모든 예측을 체계적으로 처리하는 것입니다.
 새 모델에 대한 전체 정확도 점수를 얻으십시오.
 마지막으로 배포로 이동합니다.
 코어 ML의 ML 모델 형식으로 모델을 저장하는 코어 ML 기능으로 내보내기가 있습니다.
 그러면 Xcode로 해당 모델을 드래그 앤 드롭 할 수 있습니다.
 이번 주에는 실제로 객체 감지와 관련된 몇 가지 흥미롭고 새로운 기능을 추가했습니다.
 그래서 저는 여러분이 더 많은 것을 배우기 위해 내일의 코어 ML 세션 비전에 참석하는 것이 좋습니다.
 이 세션에서 발표자는 실제로 우리가 구축하고있는 객체 탐지 ​​모델을 실제로 취해 배치 옵션에 대해 자세히 설명합니다.
 그리고 당신은 그것을 가지고 있습니다! Turi Create의 5 단계 레시피.
 고맙습니다.
 그래서 그걸로 제 동료 인 자크 네이션 (Zach Nation)에게 데모를 전해 드리겠습니다.
  고마워요, 애런.
 코드로 곧바로 뛰어 들어가 보자.
 누가 오늘 어떤 코드를 작성하려고합니까? 우리는 지금 가서 객체 검출기 모델을 구축 할 것입니다.
 그래서 저는 Finder에서 시작할 것입니다.
 여기에 모델을 훈련시키는 데 사용할 이미지 폴더가 있습니다.
 우리는이 폴더의 Data라는 이름을 볼 수 있으며, 아침 식 사용 음식의 이미지가 가득합니다.
 나는 크루아상, 계란 등을 가지고있다.
 이것은 아침 식 사용 음식에 대한 좋은 데이터 세트입니다.
 이제는 코드를 작성해 보겠습니다.
 Jupyter 노트북이라는 환경으로 전환 할 것입니다.
 이 대화 형 Python 환경에서 Python 코드 스 니펫을 실행하고 즉시 출력을 볼 수 있습니다.
 따라서 이것은 대화식으로 모델과 작업하는 좋은 방법입니다.
 Xcode 놀이터와 개념이 매우 비슷합니다.
 우리가 할 첫 번째 일은 Turi Create를 TC로 가져 오는 것입니다.
 그리고 우리는 나머지 스크립트에서 TC로 언급 할 수 있습니다.
 이제 우리가하고 싶은 첫 번째 작업은 데이터로드입니다.
 그리고 우리는 그것을 SFrame 형식으로로드 할 것입니다.
 그래서 먼저 이미지가 TC와 같다고 말할 수 있습니다.
로드 이미지.
 그리고 우리는 Finder에서 방금 전에 보여준 폴더 날을 주려고합니다.
 Turi Create는 데이터를 대화식으로 탐색하고 시각화 할 수있는 유틸리티를 제공합니다.
 따라서 이미지가 제대로로드되었는지 확인하고 예상 한 SFrame을 얻습니다.
 전화 할께.
탐험, 그리고 이것은 우리가 우리의 SFrame에 두 개의 열이 있다는 것을 볼 수있는 시각화 창을 열 것입니다.
 첫 번째 이미지는 경로라고하며 이미지는 디스크의 상대 경로입니다.
 두 번째 열은 이미지라고합니다.
 그리고 그것은 실제로 이미지 그 자체의 내용입니다.
 그리고 여기 조반 음식을 볼 수 있습니다.
 이것들이 올바르게로드 된 것처럼 보이므로 진행하겠습니다.
 주피터 노트로 돌아가.
 이제 annotations라는 두 번째 SFrame을로드 할 것입니다.
 그리고 저는 이것을 SFrame 강사에게 호출하고 주석에 파일 이름을 제공 할 것입니다.
CSV.
 이 이미지에 해당하는 주석이 포함 된 CSV 파일입니다.
 그리고 그것을 살펴 보겠습니다.
 Jupyter 노트북에서,이 SFrame에는 이미지의 디스크상의 상대 경로를 다시 가리키는 경로 열이 있음을 알 수 있습니다.
 그리고 해당 이미지와 연관된 경계 상자 및 레이블을 설명하는 JSON 객체가 포함 된 주석 열.
 그러나 이제는 두 가지 다른 데이터 소스가 있으며 모델을 교육하는 데 하나의 데이터 소스를 제공해야합니다.
 함께합시다.
 Turi Create에서는 조인 메소드를 호출하는 것처럼 쉽습니다.
 저는 데이터가 이미지와 같다고 말할 것입니다.
join annotation을 사용하면 세 개의 열이있는 하나의 SFrame이 있음을 알 수 있습니다.
 그 경로 열에 합류했습니다.
 따라서 경로가있는 각 이미지의 경우 해당 경로에 대한 주석을 결합했습니다.
 이제 각 이미지에 대해 특수 효과를 사용할 수 있습니다.
 이제 모델을 준비 할 준비가되었습니다.
 그래서 저는 여기 모델을 훈련시키는 새로운 섹션을 만들 것입니다.
 그리고 그것은 단지 한 줄의 코드 일뿐입니다.
 나는 모델이 TC와 같다고 말할 것입니다.
objectdetector.
몹시 떠들어 대다.
 그리고이 형식의 데이터를 예상하는 객체 감지를위한 간단한 작업 중심의 API입니다.
 방금 만든 SFrame 데이터를 전달할 것입니다.
 그리고 오늘의 데모에서는 max iterations라는 또 다른 매개 변수를 전달하려고합니다. 일반적으로 Turi Create가 올바른 반복 횟수를 선택하기 때문에이 매개 변수를 전달할 필요가 없습니다.
 귀하가 제공 한 데이터를 기반으로합니다.
 이 경우, 최대 반복은 하나의 훈련과 같을 것이라고 말하고 싶습니다.
 그리고 이것이 1 분 정도 걸리는 이유는 신경망을 통해 실행할 준비를하기 위해 실제로 모든 이미지를 통과시키고 크기를 조정하는 것입니다.
 그것은이 물체 감지기의 두포 아래에 있습니다.

그런 다음이 Mac GPO에서 한 번의 반복 만 수행합니다.
 그러나 이것은 단지 몇 초 안에 그것을 훈련시키고 싶어했기 때문에 아마 우리가 얻을 수있는 가장 좋은 모델은 아닙니다.
 그래서 나는 요리 쇼 모드를 좋아하는 것으로 전환 할 것입니다.
 우리가 한 시간 동안 가지고있는 오븐에서 하나를 꺼내려고합니다. [웃음].
 그래서 TC라고 말할 것입니다.
loadmodel이고 breakfastmodel이라고합니다.
모델.
 그리고 이것은 조금 더 오랫동안 훈련 할 수있는 기회였습니다.
 여기 노트북에서 바로 살펴 보겠습니다.
 그리고 우리는 그것이 물체 감지기 모델이라는 것을 알 수 있습니다.
 6 개 수업으로 훈련 받았고 55 분 동안 연습했습니다.
 즉, Mac에서 한 시간 안에 유용한 객체 탐지기 모델을 교육 할 수 있습니다.
 다음으로,이 모델의 예측을 테스트하고 그것이 좋은지 확인해 봅시다.
 그래서 여기서 예측을 검사하는 새로운 섹션을 만들 것입니다.
 그리고 우리는 계속해서 테스트 데이터 세트를로드 할 것입니다.
 그리고 여기에서는 이미 SFrame 형식으로 준비했습니다.
 그래서 나는 그것을로드 할 것이고, 나는 그것을 testbreakfastdata라고 불렀다.
sframe.
 이 테스트 SFrame에는 두 가지 중요한 속성이 있습니다.
 하나는 모형에 훈련 된 것과 동일한 유형의 이미지를 포함한다는 것입니다.
 그러나 두 번째로 중요한 자산은 이전에 이러한 이미지를 본 적이없는 모델입니다.
 따라서이 모델이 사용자의 실제 데이터로 일반화 할 수 있는지 여부를 판단하는 좋은 테스트입니다.
 모델을 호출하여 전체 테스트 세트에서 예측을 할 것입니다.
테스트 SFrame을 예측하고 제공합니다.
 그리고 우리는 전체 SFrame에 대한 배치 예측을 얻습니다.
 그러면 몇 초가 걸릴 것입니다.
 그리고 나서 우리는 조사 할 것입니다.
 여기서 임의의 예측을 선택하려고합니다.
 인덱스 2라고 가정 해 봅시다.
 여기서는 교육 데이터가 제공되는 것과 동일한 형식으로 예측 된 JSON 객체를 볼 수 있습니다.
 여기 좌표, 높이, 너비, x 및 y가 있습니다.
 라벨, 바나나.
 그리고 우리는 모델로부터 신뢰 점수를 얻습니다.
 이 경우에 대해.
87.
 이것은 인간이 해석하기에는 조금 힘듭니다.
 이 이미지가 정말로 바나나라고 생각하는지 또는이 좌표가 바나나가 그 이미지에 나타날 지 여부는 알 수 없습니다.
 Turi Create는 예상 경계 상자 또는 지상 진리 경계 상자를 가져 와서 이미지 위에 바로 그릴 수있는 기능을 제공합니다.
 그러니 가자.
 예측 된 이미지라는 테스트 SFrame에서 새 열을 만들려고합니다.
 그리기 경계 상자라는 객체 검출기 유틸리티의 출력에 할당 할 것입니다.
 그리고 이미지 열을 테스트하는 바운딩 박스를 그리게됩니다.
 그래서 그것은 이미지 그 자체입니다. 그리고 저는 또한 모델로부터 얻은 예측을 전달할 것입니다.
 그것은 예측 된 바운딩 박스를 각 이미지 위에 그릴 것입니다.
 이제 두 번째 예측을 다시 한 번 살펴 보겠습니다.
 이번에는 이미지 형태로.
 그래서 나는 testpredictedimage2라고 말할 수 있습니다.
보여 주다.
 그리고 노트북에서 바로 렌더링됩니다.
 그리고 이것은 하나의 사진을 위해 적어도 모델의 작동을 알기 때문에 현장 검사로 유용합니다.
 그러나 이것이 우리가 지나가는 다음 50,000 개의 이미지를 위해 효과가 있는지 알려주지는 않습니다.
 그래서 우리는 모델을 정량적으로 평가할 것입니다.
 그리고 모델 평가라는 노트북에서 새로운 섹션을 시작하겠습니다.
 그리고 우리가 할 일은 호출 모델입니다.
평가하고 다시 한번, 전체 테스트 데이터 세트 만 전달할 것입니다.
 여기서 평가 기능은 Aaron이 설명한 바 이닝 상자가 적어도 50 % 겹치고 올바른 레이블이 있는지 테스트하여 메트릭을 실행합니다.
 그리고 우리가 훈련 한 6 개의 클래스 각각에 걸쳐 그 결과를 줄 것입니다.
 그래서 여기서 우리는 올바른 레이블을 가진 겹치는 바운딩 박스가 베이글 시간의 약 80 %를 차지한다는 것을 알 수 있습니다.
 바나나 시간의 약 67 %.
 등등.
 꽤 괜찮습니다. 그래서이 모델이 실제 앱에서 실제로 작동하는지 봅시다.
 우리는 방금 훈련 한 모델로부터 core ML 모델을 생성하기 위해 exportcoreml을 호출 할 것입니다.
 그리고 나는 이것을 아침 식사 모델이라고 부를 것입니다.
mlmodel.
 그런 다음 훈련이 끝나면 바로 앞으로 나가서 파인더에서 열어 보겠습니다.
 아니면 미안해.
 그것이 수출을 마자 마자.
 그래서 여기에서 찾기에서, 나는 breakfastmodel을 가지고있다.
mlmodel.
 Xcode에서 열면 어떤 코어 ML 모델처럼 보입니다.
 그것은 입력 이미지를 취하고 출력으로서 우리는 자신감과 좌표를 얻습니다.
 이것이 우리가 가지고있는 이미지의 경계 상자와 레이블에 대한 예측을 알려줍니다.
 이제 우리가이 모델을 사용할 아이폰 앱으로 넘어 갑시다.
 그래서 여기 내 iPhone에는 Food Predictor라는 앱이 있습니다.
 그리고 이것은 우리가 방금 훈련 한 모델을 사용할 것입니다.
 여기 사진 중에서 선택하겠습니다.
 오늘 아침의 아침 사진이 있어요.
 이것은 나를위한 꽤 전형적인 아침 식사 다 : 커피와 바나나.
 음, 종종 나는 바나나를 건너 뛴다.
 하지만 오늘 아침에 바나나를 먹었다 고 가정 해 봅시다.

이미지를 바로 탭할 수 있습니다.
 경계 상자를 알고 있기 때문에 경계 상자 내의 객체를 식별 할 수 있습니다.
 그리고 여기에 우리는 이것이 바나나임을 알려주는 모델을 보았습니다. 이것은 커피 한 잔입니다.
 그래서 우리가 방금 본 것을 되짚어 보겠습니다.
 먼저, 이미지와 주석을 SFrame 형식으로로드 한 다음 간단한 함수 호출로 함께 결합했습니다.
 우리는 탐색 방법을 사용하여 데이터를 대화식으로 탐험했습니다.
 우리는 이미지와 바운딩 박스 및 라벨을 모두 포함하는 데이터 객체를 전달하는 간단한 상위 API 만 사용하여 모델을 만들었습니다.
 우리는 그 모델을 둘 다 정 성적으로 평가하여 출력물을 사람이 생각하는대로 확인했습니다.
 그리고 양적으로, 우리가하고있는 작업에 적용되는 특정 척도를 묻습니다.
 그런 다음 해당 모델을 앱에서 사용할 수 있도록 Core ML 형식으로 내 보냅니다.
 다음으로 Turi Create 5의 흥미로운 새로운 기능에 대해 설명하고 기어를 바꾸고 싶습니다.
0.
 Turi 만들기 5.
0 스타일 전송이라는 새로운 작업이 있습니다.
 Mac의 기본 GPU 가속화 기능을 통해 성능이 크게 향상되었습니다.
 또한 개인화 및 비주얼 기능을위한 추천 모델을 포함하여 새로운 배포 옵션을 제공하므로 인쇄 기능이있는 모델을 사용하여 앱 크기를 줄일 수 있습니다.
 이미 운영 체제에있는 모델을 활용합니다.
 스타일 이전 작업에 대해 조금 더 이야기 해 봅시다.
 우리가 어떤 스타일 이미지를 가지고 있다고 상상해보십시오.
 여기에 우리는 가벼운 벌집 무늬와 아주 화려한 꽃 무늬가 있습니다.
 우리는 카메라로 찍는 우리 자신의 이미지에 필터를 적용하기를 원합니다.
 우리는 여기에 개 사진을 가지고 있는데, 그 개들에게 그 스타일을 적용하는 것이 어떻게 생겼는지는 비슷한 것입니다.
 스타일 이전 모델을 사용하면 동일한 스타일을 적용하여 더 많은 사진에 적용 할 수 있습니다.
 고양이와 다른 개를 보자.
 그리고 그것이 우리가 얻을 수있는 효과입니다.
 다음은 사용자가 찍을 사진의 필터에 스타일 전송을 사용하는 앱의 예입니다.
 스타일 전송 모델을 작성하는 코드는 Turi Create의 다른 고급 태스크와 동일한 5 단계 레서피를 따릅니다.
 따라서 Turi Create를 가져 와서 데이터를 SFrame 형식으로로드하고 간단한 고급 API로 모델을 생성하는 것으로 시작할 수 있습니다.
 그런 다음 이미지를 가져 와서 스타일 필터를 적용하기 위해 stylize라는 함수를 사용하여 예측을합니다.
 마지막으로 Turi Create의 다른 모델과 마찬가지로 코어 ML 형식으로 배포 할 수 있도록 내보낼 수 있습니다.
 이제 다른 데모를 살펴 보겠습니다.
 이번에는 스타일 이전 모델을 만들 것입니다.
 그래서 Jupyter 노트북 환경으로 다시 전환합니다.
 Turi Create를 가져 와서 다시 한 번 시작하겠습니다.
 TC로.
 그런 다음 이미지가 포함 된 두 개의 SFrame을로드합니다.
 하나는 tc라고 부르는 스타일 이미지입니다.
로드 이미지, 디렉토리 이름, 스타일을 지정하겠습니다.
 그리고 다른 하나는 콘텐츠 이미지입니다.
 그리고 이것이 작동하는 방식은 스타일 이미지가 적용 할 수있는 필터로 바꾸고 싶은 스타일입니다.
 또한 콘텐츠 이미지는 해당 필터를 적용 할 사진 유형을 나타내는 이미지 일 수 있습니다.
 그래서이 경우에는 다양한 사진 일뿐입니다.
 우리는 content라는 폴더를 SFrame에로드 할 것입니다.
 그런 다음 모델을 준비 할 준비가되었습니다.
 그래서 저는 모델이 tc와 같다고 말할 것입니다.
styletransfer.
몹시 떠들어 대다.
 그리고 나는 스타일과 내용을 전달할 것이고 그것은 우리가 필요로하는 전부입니다.
 그러나 그것은 오늘 데모를 위해 훈련하기에는 너무 오래 걸릴 것입니다.
 그래서 다시 한 번, 나는 요리 쇼처럼 그것을 할 것이고, 우리는 우리가 이미 오븐에 가지고있는 것을 올려 놓을 것입니다.
 저는 모델이 tc와 같다고 말할 것입니다.
loadmodel과 나는 이미 훈련 된 스타일 전송 모델을로드 할 것입니다.
 이 스타일 이미지 중 일부를 보면서이 모델이 기대하는 바를 알아 봅시다.
 우리는 스타일 이미지 col을 가지고 있습니다 - 우리는 우리 스타일 SFrame에 이미지 열을 가지고 있습니다.
 스타일 번호 3을 살펴보고 어떻게 보이는지 봅시다.
 장작 더미 같아.
 그리고 이것은 꽤 문체입니다.
 우리가 이것을 다른 이미지에 대한 필터로 적용한다면 이것이 인식 될 것이라고 생각합니다.
 이제 일부 콘텐츠 이미지를 살펴 보겠습니다.
 나는 테스트 데이터 세트를로드 할 것이다.
 다시 한번 이것은 사용자가 앱에서 런타임에 가질 이미지 유형을 나타내는 데이터 세트입니다.
 그리고 중요한 것은 모델이 교육 시간에 이러한 것을 본 적이 없다는 것입니다.
 따라서 테스트 이미지로 평가하면 모델이 사용자의 데이터로 일반화 할 수 있는지 여부를 알 수 있습니다.
 이제 테스트 데이터 세트를로드 할 것입니다.
 TC와 함께.
로드 이미지가 다시 한 번 기능합니다.
 그리고 우리는 그 폴더 테스트를 호출 할 것입니다.
 그리고 나는 충분한 이미지라는 테스트 데이터 세트에서 하나의 이미지를 추출 할 것입니다.
 그리고 저는 거기에 첫 번째 이미지를 찍을 것입니다.
 그리고 전화 할게.
보여 주다.

그래서 우리는 필터 적용없이 그 이미지가 어떻게 보이는지 볼 수 있습니다.
 그건 내 고양이, 아홉 명 중 일곱 명.
 그녀는 항상 그렇게 보입니다.
 그리고 우리는 방금 훈련 한 모델을 사용하여 그 이미지를 양식화 할 것입니다.
 따라서 저는 양식화 된 이미지가 모델과 동일하다고 말할 것입니다.
스타일링.
 이 경우 모델은 스타일 전송 작업과 관련되어 있기 때문에이 함수를 stylize라고합니다.
 그리고 그 샘플 이미지를 전달할 것입니다.
 스타일은 우리가 이전에 선택했던 스타일이기 때문에 스타일은 3과 같습니다. 여기서는 장작과 같습니다.
 그러면 양식화 된 이미지가 어떤 모양인지 보겠습니다.
 전화 할게.
그것을 보여주세요, 그리고 여기에 장작 더미처럼 보이는 고양이가 있습니다.
 이 기능이 다른 스타일에서도 작동하는지 확인합시다.
 나는 그 샘플 이미지에서 양식 된 이미지를 만들어 보겠습니다.
 스타일을 7로 지정하겠습니다.
 그리고 그 모양이 어떤지 보자.
 꽤 좋아 보인다.
 나는 우리가 방금 적용한 스타일이 무엇인지 궁금합니다.
 스타일 이미지를 살펴 보겠습니다.
 스타일 이미지 7입니다.
 그리고 다시 한 번 전화 할 수 있습니다.
그 스타일 이미지가 어떻게 보일지 보여 주며, 우리 고양이에 방금 적용한 필터처럼 보입니다.
 좋은 스타일 이전 모델을 얻었으므로 모델을 호출 할 수 있습니다.
exportcoreml은 다른 모델과 완전히 동일하며 Core ML 형식으로 저장하십시오.
 이제이 모델에서 필터를 적용 할 수있는 스타일 전송 응용 프로그램이있는 iPhone으로 전환하십시오.
 그래서 여기에 다시 한번 아이폰을 가지고 있습니다.
 스타일 전 달이라는 앱이 있습니다.
 내 사진 라이브러리에서이 스타일을 적용 할 사진을 선택하겠습니다.
 이들은 내 개다.
 Ryker이고 우리는이 앱에서 어떤 스타일을 사용할 수 있는지 알아볼 것입니다.
 여기서 모든 스타일을 스크롤 할 수 있으며 중요한 것은 하나의 스타일 전송 모델이이 모든 파일에 대해 학습 된 것입니다.
 한 모델에는 원하는 스타일을 포함 할 수 있습니다.
 여러 개의 필터를 사용하려면 앱의 크기를 크게 늘릴 필요가 없습니다.
 Ryker에게 적용된 스타일을 보도록하겠습니다.
 정말 멋진.
 그래서 우리가 방금 본 것을 되풀이하기 위해 이미지를 SFrame 형식으로로드했습니다.
 이 시간 스타일 및 콘텐츠 이미지는 두 개의 SFrame으로 나뉩니다.
 우리는 일련의 스타일 이미지와 일련의 콘텐츠 이미지에서 직접 작동하는 스타일 이전을위한 고급 API를 사용하여 모델을 만들었습니다.
 그런 다음 이미지를 양식화하여 모델이 잘 작동하는지 확인합니다.
 Turi Create에서 이러한 예측을 시각화했습니다.
 마지막으로 우리는이 앱을 사용하기 위해 코어 ML 포맷으로 모델을 수출했습니다.
 약간의 기어 전환.
 Turi Create 5의 다른 기능에 대해 이야기하고 싶습니다.
0.
 우리는 이제 Mac GPU 가속을 통해 이미지 분류에서 최대 12 배의 성능 향상을 제공합니다.
 또한 9x는 물체 감지 기능이 있으며 iMac Pro에 있습니다.
 우리는 코어 ML 포맷으로의 수출을 위해 새로운 업무를 사용할 수 있습니다.
 개인화.
 여기서 수행해야 할 작업은 사용자의 과거 기본 설정을 기반으로 사용자를위한 항목을 추천하는 것입니다.
 이 유형의 모델은 MacOS Mojave 및 iOS 12에서 사용할 수있는 Core ML의 새로운 사용자 정의 모델 지원을 사용하여 배포됩니다.
 Turi Create 소스를 오픈 한 이래로 커뮤니티의 주요 기능 요청이었습니다.
 그래서 나는 오늘 그것을 당신에게 가져갈 수있어서 정말 기쁩니다.
 Core ML의 추천 모델은 다른 Core ML 모델과 유사합니다.
 그러나 주목할 가치가있는 것은 여기서 Dependencies라고 불리는 하단에 섹션이 있다는 것입니다.
 이 섹션에서는이 모델이 맞춤 모델을 사용하고 해당 모델을 TC recommender라고합니다.
 그리고 이것은 단지 Turi Create로,이 커스텀 모델 API를 통해 Core ML에서 추천자를 지원합니다.
 Core ML에서이 모델을 사용하는 것은 다른 Core ML 모델과 매우 유사합니다.
 모델을 인스턴스화하고 입력을 생성 할 수 있습니다.
 따라서이 경우 아바타 생성 앱이 있습니다.
 그리고 사용자는 자신의 아바타를 위해 갈색 수염과 갈색 핸들 바 콧수염과 갈색 긴 머리를 골랐을 수도 있습니다.
 그리고 우리는 모델로부터 예측을 할 수 있습니다.
 이러한 상호 작용을 입력으로 제공합니다.
 그리고 우리가 k10이라고 말하면 그 입력에 따라 10 대 예측을 얻습니다.
 오늘 배운 것을 다시 요약하십시오.
 Turi Create를 사용하면 응용 프로그램에서 지능적인 기능을 지원하는 Core ML 모델을 만들 수 있습니다.
 그것은 당신이하고있는 작업을 식별하는 것으로 시작하는 간단한 5 단계 레서피를 사용합니다.
 그리고이를 기계 학습 과제에 매핑합니다.
 해당 모델을 교육하는 데 사용할 데이터를 수집하고 주석을 추가하십시오.
 수행중인 작업과 관련된 단순하고 높은 수준의 API를 사용하여 모델 자체를 교육하십시오.
 Turi에서 그 모델을 평가하기 질적으로나 양적으로 만들어라.
 마지막으로 Core ML 형식으로 배포합니다.
 이 5 단계 레시피는 Turi Create 가져 오기로 시작하는 코드에 매핑됩니다.
 데이터를 SFrame 형식으로로드 할 수 있습니다.
 해당 타스크 별 API를 사용하여 모델을 작성하십시오.
 수행중인 작업과 관련된 평가 함수를 사용하여 모델을 평가하십시오.
 또한 배포를 위해 엑스포트하여 코어 ML 기능을 호출합니다.

Turi Create는 다양한 기계 학습 작업을 지원합니다.
  이미지 분류 및 텍스트 분류와 같은 높은 수준의 작업에서부터 저수준의 기계 학습 필수 사항에 이르기까지 다양합니다.
  모든 유형의 데이터에 대한 회귀 및 분류와 같습니다.
  결과 모델을 사용하면 개체 감지 또는 스타일 전송과 같은 응용 프로그램에서 지능형 기능을 사용하여 필터로 사용할 수 있습니다.
  자세한 내용은 개발자에게 문의하십시오.
사과.
com 세션 URL
  그리고 우리 실험실에 오십시오.
  오늘 오후와 금요일 오후에 실험실이 있습니다.
  그리고 우리는 여러분의 의견을 환영합니다.
  귀하의 질문에 언제든지 답변 해 드리겠습니다.
  그리고 우리가 오늘 보여 주었던 모든 데모를 탐색 할 수 있습니다.
  고맙습니다.
