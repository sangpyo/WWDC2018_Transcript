여보세요.
 모두 환영합니다.
 내 이름은 가우 라프 야.
 그리고 오늘 우리는 기계 학습에 관해 이야기 할 것입니다.
 작년에 Core ML을 출시했습니다.
 그리고 개발자 여러분의 반응은 엄청났습니다.
 우리는 당신이 만든 애플 리케이션에 놀라움을 금치 못합니다.
 먼저 감사의 말을 시작하겠습니다.
 Core ML을 채택 해 주어서 고맙습니다.
 우리는 많은 사람들이 그것을 사용하고 지능적인 기능을 사용자에게 제공하는 것을 좋아합니다.
 우리는 함께합니다.
 고맙습니다.
 devlopers에 대한 박수입니다.
 괜찮아.
 따라서 Core ML은 앱에서 ML 모델을 손쉽게 통합 할 수있는 방법을 제공합니다.
 아이디어는 매우 간단합니다.
 ML 모델을 가져오고, Xcode로 드래그 앤 드롭하고, 코드 세 줄만 있으면 수백만 개의 매개 변수와 수십억 개의 계산을 실시간으로 수행 할 수있는 최첨단 ML 모델을 실행할 수 있습니다.
 놀랍습니다.
 또한 사용자는 실시간 기계 학습은 물론 개인 정보 보호에 익숙한 기계 학습을 제공합니다.
 Xcode에서 ML 모델을 끌어서 놓기 만하면 나머지는 Core ML이 처리합니다.
 큰 문제는 내가이 모델을 어디에서 가져올 것인가라는 것입니다. 그래서 작년에 우리는 두 가지 옵션을 제공했습니다.
 첫 번째는 웹 사이트에서 인기있는 모델 인이 모델 중 일부를 다운로드 할 수 있었지만 더 중요한 것은 Core ML 도구도 출시했습니다.
 핵심 ML 도구를 사용하면 놀라운 ML 커뮤니티에서 수행하는 작업을 활용할 수 있습니다.
 따라서 아이디어는 다시 간단합니다.
 좋아하는 학습 라이브러리를 선택하고, 해당 교육 라이브러리에서 모델을 교육하고,이를 코어 ML로 변환 한 다음 애플리케이션에 통합하십시오.
 Core ML을 출시했을 때 우리는 5 ~ 6 개의 교육 라이브러리에 대해 5 ~ 6 개의 교육 라이브러리를 지원했지만 1 년 이내에 그 곳의 모든 유명한 교육 라이브러리를 지원합니다.
 우리는 더 많은 사용자 정의를 허용하기 위해 도구를 향상시키고 있습니다.
 그리고 우리는 내일 세션에서 Core ML 도구에 대해 더 자세히 이야기 할 것입니다.
 우리가 올해 말에 한 또 다른 일은 오픈 소스 시스템 학습 라이브러리 인 Turi Create를 출시했습니다.
 우리는 내일 세션에서 Turi Create에 관해 이야기 할 것입니다.
 그러나 올해 우리는 당신에게 더 많은 것을주고 싶습니다.
 우리는 계속 여행을하고 싶습니다.
 우리는 Xcode의 힘을 활용하는 무언가 인 Swifty를 제공하기를 원합니다. 우리의 개발자, 당신에게 기계 학습을 신비화하는 것을 집중적으로 다루는 것입니다.
 따라서 우리는 Swift에서 Create ML - 우리의 기계 학습 프레임 워크를 소개합니다.
 그래서 ML 생성은 방정식의 왼쪽을 완성합니다.
 아이디어는 Create ML에서 모델을 만들고 Core ML에서 실행하는 것입니다.
 가장 좋아하는 언어 인 Swift에서 완벽한 엔드 투 엔드 기계 학습을 수행하십시오.
 따라서 한 언어로 교육 한 다음 다른 언어로 실행하는 언어 이상한 점을 다루지는 않습니다.
 ML 생성은 간단하고 매우 강력합니다.
 그것은 귀하의 응용 프로그램에 맞게 조정됩니다.
 Apple의 핵심 기술을 활용하므로 Mac에서 모든 것을 할 수 있습니다.
 올해는 세 가지 매우 중요한 사용 사례에 초점을 맞출 것입니다.
 첫 번째는 이미지이고 두 번째는 텍스트이며 세 번째는 표 형식의 데이터입니다.
 이는 우리가 귀하에게 유익하다고 생각하는 최고의 유스 케이스입니다.
 따라서 맞춤 이미지 분류 프로그램과 같은 작업을 수행 할 수 있습니다.
 아이디어는 제품 카탈로그의 제품을 인식 할 수있는 이미지 분류자를 만드는 것입니다.
 텍스트 분류기와 같은 작업을 수행하여 자신 만의 정서 분석, 주제 분석, 도메인 분석을 할 수 있습니다.
 또한 테이블 형식 데이터에 대한 고전적인 회귀 및 분류 작업을 수행 할 수 있습니다.
 예를 들어 화학 성분을 사용하여 와인 품질을 예측하고자한다고 가정 해 봅시다.
 가능성은 무한하며 앞으로 30 분 안에 자세히 논의 할 것입니다.
 그러나 공통 워크 플로를 살펴 보겠습니다.
 먼저, 앱에서 경험을 쌓기 위해 노력하고 있다고 가정 해 봅시다. 기계 학습이 거기에서 옳은 일인 지 확인하십시오.
 맹목적으로 기계 학습을 적용하지 마십시오.
 기계 학습이 거기에서 수행하고 기계 학습 문제를 정의하는 것이 옳은지 확인하십시오.
 둘째, 데이터를 수집하십시오.
 이 데이터가 앱의 실제 사용을 반영하는지 확인하십시오.
 예를 들어, iPhone에서 사용자가 사용할 맞춤 이미지 분류기를 만드는 경우 iPhone에서 사진을 수집하십시오.
 수집하지 마십시오 - 적은 수의 스크린 샷을 수집하지만 더 많은 iPhone 사진을 보유하십시오.
 그런 다음 모델을 훈련합니다.
 마지막으로 중요한 단계는이 모델을 평가하는 것입니다.
 모델 평가는 별도의 유인물 세트에서 수행됩니다.
 네가 행복하다면 ML 모델을 써라.
 그러나 결과가 좋지 않다고 말하자.
 다른 매개 변수로 모델을 재교육하거나 더 많은 데이터를 수집해야합니다.
 Create ML은이 워크 플로우의 네 단계에 걸쳐 실제로 도움이됩니다.
 우리는 프레젠테이션의 나머지 부분에서 우리가 이야기 할 강력한 내장형 데이터 (들리지 않음) 유틸리티, 데이터 소스 및 데이터 테이블을 가지고 있습니다.

한 줄의 코드 만 사용하여 실제로 모델을 교육 할 수 있습니다.
 그리고 교육은 하드웨어에 최적화되어 있습니다.
 내장 된 평가 메트릭이 있으므로 직접 정밀도와 리콜 및 혼동 메트릭 계산을 작성할 필요가 없습니다.
 그것을 써.
 마지막으로, 행복 할 때 모델을 작성하십시오.
 이제 세 가지 사용 사례, 즉 이미지, 텍스트 및 표 형식 데이터에 대해 자세히 살펴 보겠습니다.
 이제 이미지로 시작하겠습니다.
 그러기 위해 Machine Learning 팀의 선임 엔지니어 인 Lizi Ottens를 초대합니다.
 고맙습니다.
  고맙습니다, 가우 라브
 이미지 기반 경험을 가능하게하는 것이 앱에 추가 할 수있는 가장 강력하고 상호 작용하는 기능이기 때문에 오늘은 맞춤 이미지 분류 모델을 교육하는 방법을 살펴 보겠습니다.
 이미지 분류는 이미지에 적용 할 카테고리 세트에서 어떤 라벨을 식별하는지 문제입니다.
 교육 데이터의 유형에 따라 도메인 별 사용 사례를 타겟팅하여 앱에서 사용할 수 있습니다.
 첫 번째 단계는 교육 데이터를 수집하는 것입니다.
 그렇게 할 때, 우리는 과일 분류자를보고 어떻게 할 것인지를 볼 것입니다.
 먼저, 실제로 볼 수있는 실제 데이터를 반영하는 다양한 유형의 이미지를 수집하여 레이블을 지정해야합니다.
 먼저 이미지 배열에 해당하는 문자열 레이블이있는 사전으로이를 수행 할 수 있습니다.
 또는 우리가 알아 차 렸던 것은 인기있는 많은 데이터 세트가 계층 적 디렉토리 구조로 구성되어 라벨이 그 안에있는 모든 이미지를 포함하는 폴더의 이름이라는 것입니다.
 또한 레이블이 지정된 파일 이름을 포함하는 단일 폴더와 같은 다른 데이터 소스가 있습니다.
 Create ML API에서는 이러한 구조를 추출 할 수있는 편의를 제공했습니다.
 이제 교육은 방정식의 더 복잡한 부분입니다.
 따라서 데이터를 얻었 으면 다음에 얻을 수있는 것입니다.
 그리고 여러분이 할 수있는 것은 입력 이미지에서 처음부터 매우 복잡한 모델을 시작할 수 있다는 것입니다.
 그리고 이것을 위해 많은 라벨 데이터가 필요합니다.
 큰 계산이 필요하고 많은 인내가 필요합니다.
 그러나 업계에서 잘 정립 된 또 다른 기술은 이전 학습입니다.
 Apple은 복잡한 기계 학습 모델을 교육 한 경험이 풍부하기 때문에 운영 체제에서 이미 활용할 수 있습니다.
 따라서 우리는 OS에 이미 존재하는이 모델 위에 전송 학습을 적용하고 마지막 몇 개의 레이어를 특정 데이터로 재 훈련하여 더 이상 수백만 개의 이미지가 필요하지 않게합니다.
 가지고있는 데이터의 양을 사용하여 훌륭한 분류자를 훈련시킬 수 있습니다.
 따라서 교육 시간이 단축됩니다.
 그리고 우리가 함께 작업 한 개발자의 경우 수 시간의 교육 과정에서부터 수천 개의 이미지 또는 작은 데이터 세트, 심지어 몇 초만에 몇 분의 시간이 걸리는 것으로 나타났습니다.
 또한 수천 메가 바이트에서부터 수 메가 바이트 또는 심지어 킬로바이트까지 몇 메가 바이트에 이르는 훨씬 더 작은 모델이 생성됩니다.
 Create ML의 목표는 이것의 대부분을 추상화하여 간단하고 사용하기 쉽게 만드는 것입니다.
 그러나 그것을 증명하기 위해 데모를 살펴 보겠습니다.
 우선, 문제를 설정하기 위해 이미 업계에있는 최첨단 이미지 분류 모델을 사용하는 앱을 시작했습니다.
 하지만 이것은 꽤 큽니다.
 그것은 우리의 응용 프로그램에서 100 메가 바이트입니다.
 그리고 우리가 그것을 실행하면, 우리는 과일을 가지고 있지만 그것이 내가 찾고 있었던 것이 아닙니다.
 대신에 우리가이 특별한 것들을 분류 할 수 있다면 나는 정말로 그것을 원합니다.
 우리가 할 수있는 일은 새로운 놀이터로 전환하고 CreateMLUI를 가져와 UI를 사용하여이를 수행하는 방법을 살펴볼 수 있다는 것입니다.
 우리는 빌더를 정의 할 수 있습니다.
 초기화하십시오.
 그리고 드래그 앤 드롭 교육을 가능하게하기 위해 빌더를 라이브 뷰에 표시 할 수 있습니다.
 라이브 뷰에서 이미지를 드래그하여 교육을 시작하라는 메시지가 나타납니다.
 그리고 여기에 과일 사진 몇 장을 곁들여 두었습니다.
 여기에 블루 베리와 다른 종류가 있습니다.
 또한 이미지 분류기 모델을 끌어다 놓으면 자동으로 이미지 분류기 모델이 Mac에서 교육을 시작합니다.
 이 모든 것은 GPU에 의해 가속화되지만 많은 범주에서 교육을 받게됩니다.
 교육 데이터 세트의 정확성을 자동으로 알려주지 만, 실제 사용 사례에서 모델이 어떻게 수행 될지 예측하기 위해 모델에서 이전에 보지 못한 새로운 이미지에서이를 시도하면 도움이됩니다.
 따라서 보이지 않는 이미지가있는 다른 폴더로 드래그 할 수 있습니다.
 그리고 이제이 모델은 이러한 새로운 유형의 과일을 모두 평가하고 있습니다.
 스크롤하면 각 유형의 진정한 레이블이 무엇인지를 예측할 수 있습니다.
 이 정확성에 만족한다면 모델을 모델로 가져 와서 앱으로 드래그 할 수 있습니다.

나는 그것을 여기에 추가 할 것이다.
 그리고 우리가 살펴 본다면,이 모델은 83 킬로바이트입니다.
 수백에서 엄청난 비용 절감 효과가 있습니다.
 따라서 이전에 사용하던 모델을 삭제할 수 있습니다.
 그리고 뷰 컨트롤러에서 ImageClassifier를 초기화 할 수 있습니다.
 그런 다음 앱을 다시 실행하고 시뮬레이터를 실행하여 일부 과일에서 어떻게 작동하는지 확인할 수 있습니다.
 우리가 나무 딸기를 인식하기 위하여 모형을 훈련했기 때문에 나무 딸기에, 지금 정확하게 그것을 예언 할 수있다.
 우리는 심지어 딸기와 구별 할 수 있는지를 볼 수 있습니다.
 그러나 사용할 수있는 다른 워크 플로가 있습니다.
 아마도 프로그래밍 방식으로이 작업을 수행하거나 아니면 자동화하고 싶을 수도 있습니다.
 또한 Create ML을 사용하는 방법을 설명 할 수 있습니다.
 이제 다른 놀이터로 전환하고 ML 생성을 가져올 수 있습니다.
 우리는 URL을 사용할 것이므로 재단을 가져올 수 있습니다.
 그리고 우리의 바탕 화면에는 여전히 이러한 과일 폴더가 있기 때문에 어디 있는지 말할 수 있고 테스트 과일이 어디에 있는지 말할 수 있습니다.
 그리고 나서 다음 단계는 실제로 모델을 훈련시키는 것입니다.
 그래서 우리는 모델을 정의 할 수 있고 이미지 분류자를 초기화 할 수 있습니다.
 이제 자동 완료가 보여주는 것을 살펴보면 이미지 배열에 레이블 사전 형식의 교육 데이터를 제공 할 수 있음을 알 수 있습니다. 또는 데이터 소스를 사용하거나 모델 교육 매개 변수를 지정할 수도 있습니다. 고 싶어요.
 데이터 소스를 사용합시다.
 그리고 라벨 디렉토리를 사용합니다. 그 이유는 데이터를 체계화하고 교육 디렉토리를 지정하는 방법이기 때문입니다.
 그리고 우리는 Xcode 놀이터의 새로운 [인식 할 수없는] 모드에서 실행 중이므로 Shift 키를 눌러야하고 모델이 바로 교육을 시작합니다.
 콘솔을 끌어 올려서 하나의 출력, 추출 기능 및 반복 실행 횟수를 볼 수도 있습니다.
 그런 다음 빠른 외양을 열어 모델의 이름과 훈련 된 인스턴스 수를 확인할 수도 있습니다.
 이제 우리가 따로 설정 한 테스트 데이터를 평가할 수 있습니다.
 따라서 우리가 할 수있는 것은 테스트 데이터의 URL을 지정하여 폴더가 같은 방식으로 구성되기 때문에 다른 데이터 소스에 대한 평가를 호출 할 수 있다는 것입니다.
 Shift 키를 누르면 모델이 테스트 이미지를 평가합니다.
 완료되면 빠른보기를보고 얼마나 많은 예제가 평가되었는지, 폴더에 몇 개의 클래스가 있었는지와 정확도를 볼 수 있습니다.
 우리가 행복하다면, 우리는 그것을 쓸 수 있습니다.
 그리고 과일 분류기 ML 모델이라는 이름으로 데스크탑에 쓰고 싶다고 말합니다.
 일단 내가하면,이 새로운 모델이 바탕 화면에 나타납니다 볼 수 있습니다.
 우리는 그것을 두 번 클릭하여보고 그것을 정확히 볼 수 있습니다.
 이것은 또한 83 킬로바이트입니다.
 또한, 우리는 같은 방식으로 다시 우리의 애플 리케이션에 그것을 통합 할 수 있습니다.
 요약 해 보겠습니다.
 우리는 Create ML에서 이미지 분류기 모델을 교육하는 두 가지 방법을 보았습니다.
 하나는 UI를 사용하여 훈련 데이터와 평가 데이터를 드래그 앤 드롭하여 ML 모델을 생성하는 것을 매우 간단하게 만듭니다.
 다른 방법은 ML API 생성입니다.
 이 코드 중 일부를 살펴보면 가장 먼저해야 할 일은 import ML을 만드는 것입니다.
 그 다음은 우리의 교육 및 테스트 데이터가 어디에 있었는지를 명시한 다음, 실제로 우리의 교육 데이터가 어떻게 배치되었는지를 지정함으로써 모델을 훈련하기 시작했습니다.
 그런 다음 테스트 데이터를 평가하고 마지막으로 ML 모델을 저장할 수 있습니다.
 이것을 자동화하고 싶다면 이것을 스크립트로 바꿀 수 있습니다. 이는 수행 한 작업을 저장하고 언제든지 다시 실행하는 매우 보편적 인 방법입니다.
 그런 다음 파일에 대한 사용 권한을 변경하고 그렇게 실행할 수 있습니다.
 또는 다른 워크 플로의 경우 Swift 명령 줄 [들리지 않음]을 항상 사용할 수 있습니다.
 그래서 우리는 오늘날 몇 가지 다른 워크 플로우를 사용하여 이미지 분류 모델을 교육하는 방법을 보았습니다.
 그러나 다음으로 자연 언어에 관해 이야기하기 위해 타오에게 전달하고 싶습니다.
 고맙습니다.
  고마워, 리지
 안녕하세요.
 내 이름은 타오.
 저는 Core ML 팀에서 일하는 Apple의 엔지니어입니다.
 몇 줄의 코드만으로 이미지 분류기를 훈련하는 것이 얼마나 쉽고 직관적인지 알 수있었습니다.
 이제 자연 언어에 대해 동일한 작업을 수행 할 수 있음을 보여 드리겠습니다.
 올해의 릴리스에서는 텍스트 분류와 단어 태그 지정의 두 가지 자연 언어 작업을 지원할 예정입니다.
 오늘 저는 텍스트 분류에 중점을 둘 것입니다.
 단어 태깅에 대한 자세한 내용은 내일 일어나는 자연 언어 세션에 참여하십시오.
 텍스트 분류는 몇 가지 기계 학습 응용 프로그램에서 사용할 수 있습니다.
 예를 들어 정서 분석.
 개발자의 에너지는 놀랍습니다.
 그것은 긍정적 인 메모입니다.
 앱에 알리 길 원합니다.
 스팸 분석.
 사서함에서이 메시지를 본 경우 스팸 일 가능성이 매우 높습니다.
 그래서 앱에 그 사실을 알리기를 원합니다.
 주제 분석.
 워리어스는 놀라운 컴백 승리를 거두었습니다.
 그것은 스포츠 포스트입니다.
 앱이이를 분류 할 수 있기를 원합니다.
 그런 분류기를 훈련시키기 위해서, 당신이 할 일은 훈련 데이터를 수집하는 것입니다.
 ML 작성을 통해 교육 데이터를 구성 할 수있는 몇 가지 방법을 지원합니다.

예를 들어, 디렉토리에 레이블을 지정하십시오.
 여기에 두 개의 폴더가 있습니다.
 하나는 긍정적 인 이름이고, 다른 하나는 부정적인 이름이 붙여졌습니다.
 각 폴더에는 원시 텍스트가있는 다수의 기사가 있습니다. 진실 레이블은 단순히 폴더 이름입니다.
 또는 간단한 텍스트 및 진실 레이블을 쉼표로 구분하여 준비하는 간단한 CSV를 사용하여 교육 데이터를 준비 할 수 있습니다.
 또한 JSON 형식의 교육 데이터 형식을 지원하며 교육 데이터 조직에 대해 이야기하고 실제로 동일한 방식으로 테스트 데이터를 구성 할 수 있음을 알고 있습니다.
 이제 교육 데이터 및 테스트 데이터를 준비하고 이러한 텍스트 분류기를 교육하는 데 필요한 다른 단계는 무엇입니까? 일반적인 워크 플로우는 다음과 같습니다.
 당신은 원시 텍스트로 시작합니다.
 당신은 어떤 언어인지 파악하기 위해 언어 식별을합니다.
 이것을 토큰으로 변환합니다.
 그런 다음이를 일부 기능 값으로 변환 한 다음 원하는 레이블에 매핑해야하는 예측 가치를 제공하는 기계 학습 모델을 적용 할 수 있습니다.
 그런 다음 해당 레이블을 진실 레이블과 비교하여 반복 할 수 있습니다.
 Create ML을 사용하여 이러한 복잡성을 모두 제거 했으므로 원시 레이블에 원시 텍스트를 준비하고 즉시 교육을 시작하기 만하면됩니다.
 이제 그러한 분류자를 훈련하고 사용하는 것과 같은 구체적인 예를 들어 보겠습니다.
 예를 들어, Positive Positive라는 간단한 앱을 통해 긍정적 인 게시를 유도하는 것이 목적입니다.
 사용자가 트래픽을 싫어하면 배경이 빨간색으로 바뀌고 게시 버튼이 사용 중지됩니다.
 나는 교통 체증에 시달리고있는 시간당 5 마일에서 내 차를 운전하는 것을 좋아합니다.
 그것은 긍정적 인 게시물입니다.
 게시하는 것이 좋습니다.
 모든 사람의 휴대 전화에서 실행되는이 앱으로 우리 인터넷이 어떻게 생겼는지 상상해보십시오. 이제, 그렇게하기 위해, 라이브 데모를 드리겠습니다.
 그런 분급기를 훈련시키기 위해서 내가해야 할 일은 훈련 데이터를 수집하는 것입니다.
 바탕 화면에는 열차 폴더와 테스트 폴더가 있습니다.
 열차 폴더에는 두 개의 폴더가 있습니다.
 하나는 긍정적 인 이름이고, 다른 하나는 부정적이며 각 폴더에는 여러 개의 기사가 있습니다.
 그리고 테스트 폴더는 매우 유사한 방식으로 구성됩니다.
 그래서 내가하는 일은 Create ML을 가져 오는 것입니다.
 이제는 내 훈련 데이터를 어디에서 찾을 수 있는지 말해야합니다.
 이를 위해 단순히 URL 기능을 사용하고 있으며 Lizi가 방금 본 레이블 디렉토리를 사용하여 모델을 교육 할 수 있습니다.
 보기.
 훈련이 시작되었습니다.
 아래쪽에서 볼 수 있듯이, 확인할 수있는 진행 보고서가 있습니다.
 훈련이 끝난 것처럼 보입니다.
 이제이 모델의 기본 성능 수치를 확인할 수 있습니다.
 예 : 모델.
training이 모델을 보여주는 메트릭스는 2000 개가 넘는 예제와 정확도에서 100 % 훈련되었습니다.
 그러나 보이지 않는 데이터에 대해서는 어떻게 수행됩니까? 따라서 테스트 데이터를 정의한 다음 테스트 데이터에서 해당 모델을 평가하기 위해 동일한 작업을 수행 할 것입니다.
 보시다시피 77 개의 테스트 사례가 있으며 94 % 이상의 정확도를 달성하고 있습니다. 이는 매우 좋습니다.
 나는 당신이 심지어 더 높은 숫자처럼 보이기를 원한다면 반복하고 싶을 것이다. 그러나이 숫자는 내 애플 리케이션을 위해 충분히 좋다. 그래서 나는 그것을 단지 시험해 보도록한다.
 따라서 모델을 저장하려면 모델에 저장하고 모델을 내 데스크톱에 쓰는 URL을 정의해야합니다.
 모델이 저장되었습니다.
 이제 앱으로 다시 전환해야합니다.
 끌어서 놓기 만하면됩니다.
 됐어.
 이제 사용할 수 있습니다.
 나는 모델을 자동 완성해야하는 textClassifier와 동일하게 만들 것이다.
 그리고 나서 기본적인 추론 코드를 삽입 할 것입니다.
 이 추론 코드에서 볼 수 있듯이 내가하는 첫 번째 행은 모델을 사용하는 것입니다.
예측을 통해 예측을 얻습니다.
 그리고 나서이 간단한 앱 UI에 연결하기 위해, 저는 이것을 double 값으로 변환합니다.
 시도 해보자.
 네.
 우리가 보여준 몇 가지 예를 시도해 봅시다.
 나는 교통이 싫어.
 부정.
 나는 교통 체증에 시달리고있는 시간당 5 마일에서 내 차를 운전하는 것을 좋아합니다.
 양.
 재미있는 다른 것을 시도해 봅시다.
 기계 학습은 어렵습니다.
 ML 만들기가 매우 쉽습니다.
 양.
 따라서 맞춤 텍스트 분류기를 교육하고 앱에 드래그하여 사용하는 방법입니다.
 다음은 요약입니다.
 그런 분류자를 훈련 시키려면 먼저 데이터를 지정해야합니다.
 교육 데이터와 테스트 데이터를 지정한 다음 교육 데이터에서 모델을 만들 수 있습니다.
 성능을 평가하기 위해 테스트 데이터에서 모델을 평가합니다.
 마지막으로 앱에서 모델을 사용하려면이 쓰기 API를 사용하여 모델을 저장하면됩니다.
 요약하면 몇 줄의 코드만으로 사용자 정의 된 텍스트 분류기를 간단하고 직관적으로 교육 할 수 있습니다.
 그걸로 나는 표 데이터에 대해 이야기 할 Gaurav에게 손을 되돌리고 싶습니다.
 고맙습니다.
  고마워, 타오.
 이미지와 텍스트 외에도 기계 학습 문제를 해결할 때 매우 자주 발생하는 또 다른 데이터 소스는 표 형식의 데이터입니다.

표 형식의 데이터가 의미하는 바는 데이터가 특수 형식 또는 표 형식이라는 의미입니다.
 이러한 종류의 데이터는 상당히 자주 발생합니다.
 예를 들어, 침대 수, 욕조 수 또는 평방 피트 수를 사용하여 주택 가격을 예측하려고한다고 가정 해 봅시다.
 일반적으로 데이터는 표 형식으로 정렬됩니다.
 화학 성분을 사용하여 와인의 품질을 예측하고 싶습니다.
 데이터는 표 형식으로 정렬됩니다.
 아니면 행복한 시간이나 그 가격을 사용하여 오늘 밤 바쁠 것 같은 단순한 곳이라도 데이터는 표 형식이 될 것입니다.
 표 형식의 데이터를 처리하기 위해 실제로 MLDataTable이라는 새로운 데이터 구조를 도입합니다.
 MLDataTable은 [들리지 않는] 기술을 기반으로합니다. 우리는 내일 자세히 논의 할 것입니다.
 이러한 데이터 테이블에 대해 흥미로운 점이 있습니다.
 행에는 관측이나 예제가 들어 있습니다.
 그래서 여기 집 번호 2는 침대 4 개, 욕실 3 개, 가격 500K입니다.
 열은 기능으로 부르는 것을 포함합니다.
 따라서 침대는 기능이며, 욕조는 기능, 평방 피트 등입니다.
 우리가 예측하고자하는 특별한 열 (이 경우 가격)이 있으며,이 열은 목표 또는 응답 변수로 알려져 있습니다.
 테이블 형식 데이터의 배경이되는 전체 아이디어는 이러한 변수 중 하나 이상에 대한 함수로 대상 변수를 예측하고자한다는 것입니다.
 그렇다면 우리가 지원하는 일반적인 출처는 무엇입니까? 글쎄, CSV, JSON뿐만 아니라 실제로 코드를 가질 수 있습니다.
 MLDataTable에 대해 조금 더 이야기하겠습니다.
 먼저 CSV를 사용하여 데이터를 읽을 수 있습니다.
 첨자 표기법을 사용하여 열에 액세스 할 수있는 것이 더 중요합니다.
 그래서 당신이하는 일은 집이나 가격이고, 당신은 가격의 전체 칼럼을 얻습니다.
 두 개의 열을 더하고 두 개의 열을 빼고 두 개의 열을 곱하고 두 개의 열을 나눕니다.
 그리고 당신이하는 방식은 매우 자연스러운 문법입니다.
 그래서 집이나 가격을 주택이나 평방 피트로 나누어 말하면 평방 피트 당 가격을 얻을 수 있습니다.
 이 계산은 비경제적인 평가와 벡터 연산을 통해 수행됩니다.
 다른 재미있는 일들도 할 수 있습니다.
 예를 들어, 필터링을 수행 할 수있을뿐만 아니라 교육에서 데이터 테이블을 분리 할 수 ​​있습니다.
 예를 들어 큰 집에만 관심이있는 경우 표시기 변수를 만들고 필터링 할 수 있습니다.
 거기에 데이터 테이블을 지원하는 많은 작업.
 Xcode 놀이터에서 사용해 보시 길 바랍니다.
 재미 있어요.
 이제 데이터 테이블에 데이터가 있으면 그 데이터에 대한 교육을 받고 싶습니다.
 Create ML은 Boosted Tree Regression, Random Forest 등 많은 알고리즘을 지원합니다.
 그리고이 모든 알고리즘은 그 클래스로 표현됩니다.
 모델을 교육하기 위해서는 한 줄의 코드 만 작성하면됩니다.
 기본적으로 목표가 무엇인지, 그리고 데이터를 가져 오는 위치와 인스턴스를 생성하는 알고리즘을 알려줍니다.
 따라서이 경우에는 선형 회귀 또는 정규 선형 회귀 분석을 실행한다고 가정 해 보겠습니다. 실제로 데이터는 집 데이터이고 열은 가격이라고 말해야합니다.
 Boosted Tree Regression을 수행하는 경우 Linear Regression을 Boosted Tree로 바꾸면 모든 설정이 완료됩니다.
 이제 랜덤 포레스트가 그렇게 좋아.
 또한 우리는 이러한 모든 알고리즘을 자동으로 실행하고 가장 적합한 추상화를 선택하는 높은 수준의 추상화 MLRegressor도 제공합니다.
 이것은 업무에 집중해야한다는 우리의 철학과 일치합니다.
 그래서 과제는 가격을 예측하는 것입니다.
 알고리즘의 핵심적인 부분에 집중해서는 안됩니다.
 당신이 전문가 인 경우 Boosted Tree를 실제로 사용하고 매개 변수를 변경할 수도 있습니다.
 따라서 완전한 엔드 투 엔드는 이와 같이 보입니다.
 이미지와 텍스트와 정확히 같은 패턴을 따릅니다.
 먼저 데이터를 지정합니다.
 둘째, 모델을 만들면됩니다.
 셋째, 모델을 평가합니다.
 그리고 일단 행복하면, 당신은 그것을 밖으로 저장합니다.
 표 형식의 데이터, 이미지 데이터 또는 텍스트 데이터는 모두 동일한 패턴을 따릅니다.
 이제이 세션에서 본 내용을 간단히 요약 해 보겠습니다.
 그래서 Create ML은 ML 프레임 워크 인서트입니다.
 사용이 매우 간편하고 매우 강력하며 핵심적인 Apple 기술을 활용합니다.
 Mac에서 Swift로 엔드 투 엔드 머신 학습을 할 수 있습니다.
 또한 워크 플로우에 대해서도 논의했습니다.
 다시 한번, 당신은 경험에서 시작합니다.
 사용하도록 설정하려는 경험은 무엇입니까? 그런 다음 문제를 정의하십시오.
 그런 다음 데이터를 수집하십시오.
 이 데이터가 시나리오의 실제 사용을 반영하는지 확인하십시오.
 그런 다음 모델을 훈련시킵니다.
 그리고 마침내 그것을 평가하십시오.
 그리고 일단 행복하면, 그냥 내버려둬.
 ML 생성은 Swift에 있습니다.
 그리고 그것은 macOS Mojave에서 가능합니다.
 Xcode 놀이터, 신속한 스크립트 및 [들리지 않음]에서 사용할 수 있습니다.
 그래서 그것을 밖으로 시도하십시오.
 우리는 당신의 의견을 듣고 싶습니다.
 우리는 귀하의 의견을 듣기 위해 여기에 있으며, 우리가하는만큼 많이 사랑하길 바랍니다.
 우리는 실험실뿐만 아니라 기계 학습에 함께 할 것입니다.
 그래서 거기에 내일이 함께 있습니다.

실험실에도있을 예정이므로 의견을 보내주십시오.
  WWDC 응용 프로그램에도 관련 세션이 있습니다.
  우리는 내일 아침 Core ML 세션과 목요일 ML 세션 내일 오후, Vision 세션을 갖습니다.
  그리고 우리는 수요일과 금요일에 실험실을 운영합니다.
  고맙습니다.
